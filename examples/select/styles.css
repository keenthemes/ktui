/*! tailwindcss v4.1.5 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-950: oklch(25.8% 0.092 26.042);
    --color-yellow-50: oklch(98.7% 0.026 102.212);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-yellow-950: oklch(28.6% 0.066 53.813);
    --color-green-50: oklch(98.2% 0.018 155.826);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-950: oklch(26.6% 0.065 152.934);
    --color-cyan-50: oklch(98.4% 0.019 200.873);
    --color-cyan-100: oklch(95.6% 0.045 203.388);
    --color-cyan-200: oklch(91.7% 0.08 205.041);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-cyan-700: oklch(52% 0.105 223.128);
    --color-cyan-800: oklch(45% 0.085 224.283);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-violet-50: oklch(96.9% 0.016 293.756);
    --color-violet-100: oklch(94.3% 0.029 294.588);
    --color-violet-200: oklch(89.4% 0.057 293.283);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-violet-700: oklch(49.1% 0.27 292.581);
    --color-violet-800: oklch(43.2% 0.232 292.759);
    --color-violet-950: oklch(28.3% 0.141 291.089);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-md: 28rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --tracking-tight: -0.025em;
    --leading-relaxed: 1.625;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: Inter;
    --default-mono-font-family: var(--font-mono);
    --color-accent: var(--accent);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    visibility: collapse;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .start-1\/2 {
    inset-inline-start: calc(1/2 * 100%);
  }
  .start-auto {
    inset-inline-start: auto;
  }
  .-end-1 {
    inset-inline-end: calc(var(--spacing) * -1);
  }
  .-end-1\.5 {
    inset-inline-end: calc(var(--spacing) * -1.5);
  }
  .-end-2 {
    inset-inline-end: calc(var(--spacing) * -2);
  }
  .-end-px {
    inset-inline-end: -1px;
  }
  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }
  .end-auto {
    inset-inline-end: auto;
  }
  .-top-1 {
    top: calc(var(--spacing) * -1);
  }
  .-top-1\.5 {
    top: calc(var(--spacing) * -1.5);
  }
  .-top-2 {
    top: calc(var(--spacing) * -2);
  }
  .-top-px {
    top: -1px;
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-\[5\%\] {
    top: 5%;
  }
  .top-\[10\%\] {
    top: 10%;
  }
  .top-auto {
    top: auto;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .-bottom-1 {
    bottom: calc(var(--spacing) * -1);
  }
  .-bottom-1\.5 {
    bottom: calc(var(--spacing) * -1.5);
  }
  .-bottom-2 {
    bottom: calc(var(--spacing) * -2);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-auto {
    bottom: auto;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .z-10 {
    z-index: 10;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-0\.5 {
    margin-inline: calc(var(--spacing) * 0.5);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-2\.5 {
    margin-inline: calc(var(--spacing) * 2.5);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2\.5 {
    margin-block: calc(var(--spacing) * 2.5);
  }
  .-ms-0\.5 {
    margin-inline-start: calc(var(--spacing) * -0.5);
  }
  .ms-auto {
    margin-inline-start: auto;
  }
  .-me-0\.5 {
    margin-inline-end: calc(var(--spacing) * -0.5);
  }
  .-me-1\.5 {
    margin-inline-end: calc(var(--spacing) * -1.5);
  }
  .me-1\.5 {
    margin-inline-end: calc(var(--spacing) * 1.5);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .-mr-3 {
    margin-right: calc(var(--spacing) * -3);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-2\.5 {
    margin-bottom: calc(var(--spacing) * 2.5);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-14 {
    margin-bottom: calc(var(--spacing) * 14);
  }
  .-ml-1 {
    margin-left: calc(var(--spacing) * -1);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-\[4\/2\.5\] {
    aspect-ratio: 4/2.5;
  }
  .size-1 {
    width: calc(var(--spacing) * 1);
    height: calc(var(--spacing) * 1);
  }
  .size-1\.5 {
    width: calc(var(--spacing) * 1.5);
    height: calc(var(--spacing) * 1.5);
  }
  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }
  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .size-16 {
    width: calc(var(--spacing) * 16);
    height: calc(var(--spacing) * 16);
  }
  .size-20 {
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
  }
  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-11 {
    height: calc(var(--spacing) * 11);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-56 {
    height: calc(var(--spacing) * 56);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-\[34px\] {
    height: 34px;
  }
  .h-\[175px\] {
    height: 175px;
  }
  .h-\[200px\] {
    height: 200px;
  }
  .h-\[250px\] {
    height: 250px;
  }
  .h-\[300px\] {
    height: 300px;
  }
  .h-\[400px\] {
    height: 400px;
  }
  .h-\[500px\] {
    height: 500px;
  }
  .h-\[600px\] {
    height: 600px;
  }
  .h-\[800px\] {
    height: 800px;
  }
  .h-\[1000px\] {
    height: 1000px;
  }
  .h-\[2000px\] {
    height: 2000px;
  }
  .h-\[5000px\] {
    height: 5000px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[90\%\] {
    max-height: 90%;
  }
  .max-h-\[95\%\] {
    max-height: 95%;
  }
  .max-h-\[200px\] {
    max-height: 200px;
  }
  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }
  .min-h-60 {
    min-height: calc(var(--spacing) * 60);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-30 {
    width: calc(var(--spacing) * 30);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-44 {
    width: calc(var(--spacing) * 44);
  }
  .w-52 {
    width: calc(var(--spacing) * 52);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-60 {
    width: calc(var(--spacing) * 60);
  }
  .w-72 {
    width: calc(var(--spacing) * 72);
  }
  .w-\[30\%\] {
    width: 30%;
  }
  .w-\[40\%\] {
    width: 40%;
  }
  .w-\[50\%\] {
    width: 50%;
  }
  .w-\[60\%\] {
    width: 60%;
  }
  .w-\[70\%\] {
    width: 70%;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[125px\] {
    width: 125px;
  }
  .w-\[175px\] {
    width: 175px;
  }
  .w-\[225px\] {
    width: 225px;
  }
  .w-\[400px\] {
    width: 400px;
  }
  .w-\[1000px\] {
    width: 1000px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-56 {
    max-width: calc(var(--spacing) * 56);
  }
  .max-w-72 {
    max-width: calc(var(--spacing) * 72);
  }
  .max-w-\[75\%\] {
    max-width: 75%;
  }
  .max-w-\[90\%\] {
    max-width: 90%;
  }
  .max-w-\[300px\] {
    max-width: 300px;
  }
  .max-w-\[325px\] {
    max-width: 325px;
  }
  .max-w-\[400px\] {
    max-width: 400px;
  }
  .max-w-\[500px\] {
    max-width: 500px;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-4 {
    min-width: calc(var(--spacing) * 4);
  }
  .min-w-5 {
    min-width: calc(var(--spacing) * 5);
  }
  .min-w-6 {
    min-width: calc(var(--spacing) * 6);
  }
  .min-w-7 {
    min-width: calc(var(--spacing) * 7);
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-full {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-2 {
    --tw-translate-y: calc(var(--spacing) * 2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-full {
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-3\.5 {
    gap: calc(var(--spacing) * 3.5);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-7 {
    gap: calc(var(--spacing) * 7);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-px {
    gap: 1px;
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-2\.5 {
    column-gap: calc(var(--spacing) * 2.5);
  }
  .-space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-gray-200 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-200);
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius);
  }
  .rounded-md {
    border-radius: calc(var(--radius) - 2px);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-sm {
    border-radius: calc(var(--radius) - 4px);
  }
  .rounded-xl {
    border-radius: calc(var(--radius) + 4px);
  }
  .rounded-t {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .rounded-t-xl {
    border-top-left-radius: calc(var(--radius) + 4px);
    border-top-right-radius: calc(var(--radius) + 4px);
  }
  .rounded-b {
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-background {
    border-color: var(--background);
  }
  .border-blue-200 {
    border-color: var(--color-blue-200);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-blue-600 {
    border-color: var(--color-blue-600);
  }
  .border-border {
    border-color: var(--border);
  }
  .border-current {
    border-color: currentcolor;
  }
  .border-cyan-200 {
    border-color: var(--color-cyan-200);
  }
  .border-cyan-600 {
    border-color: var(--color-cyan-600);
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-400 {
    border-color: var(--color-gray-400);
  }
  .border-gray-600 {
    border-color: var(--color-gray-600);
  }
  .border-gray-800 {
    border-color: var(--color-gray-800);
  }
  .border-green-200 {
    border-color: var(--color-green-200);
  }
  .border-green-500 {
    border-color: var(--color-green-500);
  }
  .border-green-600 {
    border-color: var(--color-green-600);
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-red-200 {
    border-color: var(--color-red-200);
  }
  .border-red-600 {
    border-color: var(--color-red-600);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-yellow-200 {
    border-color: var(--color-yellow-200);
  }
  .border-yellow-500 {
    border-color: var(--color-yellow-500);
  }
  .border-zinc-700 {
    border-color: var(--color-zinc-700);
  }
  .border-zinc-800 {
    border-color: var(--color-zinc-800);
  }
  .border-t-gray-200 {
    border-top-color: var(--color-gray-200);
  }
  .border-b-gray-200 {
    border-bottom-color: var(--color-gray-200);
  }
  .border-b-transparent {
    border-bottom-color: transparent;
  }
  .bg-\[currentColor\] {
    background-color: currentColor;
  }
  .bg-accent {
    background-color: var(--accent);
  }
  .bg-accent\/50 {
    background-color: var(--accent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--accent) 50%, transparent);
    }
  }
  .bg-accent\/70 {
    background-color: var(--accent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--accent) 70%, transparent);
    }
  }
  .bg-background {
    background-color: var(--background);
  }
  .bg-black\/25 {
    background-color: color-mix(in srgb, #000 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 25%, transparent);
    }
  }
  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-cyan-50 {
    background-color: var(--color-cyan-50);
  }
  .bg-cyan-100 {
    background-color: var(--color-cyan-100);
  }
  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }
  .bg-cyan-600 {
    background-color: var(--color-cyan-600);
  }
  .bg-destructive\/10 {
    background-color: var(--destructive);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-green-50 {
    background-color: var(--color-green-50);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-mono {
    background-color: var(--mono);
  }
  .bg-mono\/30 {
    background-color: var(--mono);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--mono) 30%, transparent);
    }
  }
  .bg-muted {
    background-color: var(--muted);
  }
  .bg-muted-foreground\/15 {
    background-color: var(--muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--muted-foreground) 15%, transparent);
    }
  }
  .bg-primary\/10 {
    background-color: var(--primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--primary) 10%, transparent);
    }
  }
  .bg-red-50 {
    background-color: var(--color-red-50);
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-600 {
    background-color: var(--color-red-600);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-yellow-50 {
    background-color: var(--color-yellow-50);
  }
  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-zinc-900 {
    background-color: var(--color-zinc-900);
  }
  .bg-zinc-950 {
    background-color: var(--color-zinc-950);
  }
  .fill-gray-100 {
    fill: var(--color-gray-100);
  }
  .fill-primary {
    fill: var(--primary);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .p-16 {
    padding: calc(var(--spacing) * 16);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .ps-2\.5 {
    padding-inline-start: calc(var(--spacing) * 2.5);
  }
  .ps-6 {
    padding-inline-start: calc(var(--spacing) * 6);
  }
  .pe-2 {
    padding-inline-end: calc(var(--spacing) * 2);
  }
  .pe-2\.5 {
    padding-inline-end: calc(var(--spacing) * 2.5);
  }
  .pe-10 {
    padding-inline-end: calc(var(--spacing) * 10);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-3\.5 {
    padding-top: calc(var(--spacing) * 3.5);
  }
  .pr-2\.5 {
    padding-right: calc(var(--spacing) * 2.5);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-right {
    text-align: right;
  }
  .text-start {
    text-align: start;
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.6rem\] {
    font-size: 0.6rem;
  }
  .text-\[0\.65rem\] {
    font-size: 0.65rem;
  }
  .text-\[0\.625rem\] {
    font-size: 0.625rem;
  }
  .text-\[0\.6875rem\] {
    font-size: 0.6875rem;
  }
  .leading-\[0\.5rem\] {
    --tw-leading: 0.5rem;
    line-height: 0.5rem;
  }
  .leading-\[0\.75rem\] {
    --tw-leading: 0.75rem;
    line-height: 0.75rem;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-accent-foreground {
    color: var(--accent-foreground);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-800 {
    color: var(--color-blue-800);
  }
  .text-cyan-600 {
    color: var(--color-cyan-600);
  }
  .text-cyan-800 {
    color: var(--color-cyan-800);
  }
  .text-destructive {
    color: var(--destructive);
  }
  .text-foreground {
    color: var(--foreground);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-mono {
    color: var(--mono);
  }
  .text-mono-foreground {
    color: var(--mono-foreground);
  }
  .text-muted-foreground {
    color: var(--muted-foreground);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-primary {
    color: var(--primary);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .text-yellow-800 {
    color: var(--color-yellow-800);
  }
  .text-zinc-400 {
    color: var(--color-zinc-400);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-dashed {
    text-decoration-style: dashed;
  }
  .decoration-solid {
    text-decoration-style: solid;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .opacity-95 {
    opacity: 95%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-black\/5 {
    --tw-shadow-color: color-mix(in srgb, #000 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-black {
    --tw-ring-color: var(--color-black);
  }
  .ring-blue-300 {
    --tw-ring-color: var(--color-blue-300);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[color\,box-shadow\] {
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[height\] {
    transition-property: height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .\[--kt-reparent-mode\:prepend\] {
    --kt-reparent-mode: prepend;
  }
  .\[--kt-reparent-target\:\#parentOne\] {
    --kt-reparent-target: #parentOne;
  }
  .\[--kt-scrollable-thumb-color\:red\] {
    --kt-scrollable-thumb-color: red;
  }
  .\[tab-size\:2\] {
    tab-size: 2;
  }
  .group-data-\[view\=code\]\/block-view-wrapper\:hidden {
    &:is(:where(.group\/block-view-wrapper)[data-view="code"] *) {
      display: none;
    }
  }
  .file\:me-2\.5 {
    &::file-selector-button {
      margin-inline-end: calc(var(--spacing) * 2.5);
    }
  }
  .file\:me-3 {
    &::file-selector-button {
      margin-inline-end: calc(var(--spacing) * 3);
    }
  }
  .file\:h-full {
    &::file-selector-button {
      height: 100%;
    }
  }
  .file\:border-0 {
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .file\:border-e {
    &::file-selector-button {
      border-inline-end-style: var(--tw-border-style);
      border-inline-end-width: 1px;
    }
  }
  .file\:border-solid {
    &::file-selector-button {
      --tw-border-style: solid;
      border-style: solid;
    }
  }
  .file\:border-gray-200 {
    &::file-selector-button {
      border-color: var(--color-gray-200);
    }
  }
  .file\:bg-transparent {
    &::file-selector-button {
      background-color: transparent;
    }
  }
  .file\:p-0 {
    &::file-selector-button {
      padding: calc(var(--spacing) * 0);
    }
  }
  .file\:pe-2\.5 {
    &::file-selector-button {
      padding-inline-end: calc(var(--spacing) * 2.5);
    }
  }
  .file\:pe-3 {
    &::file-selector-button {
      padding-inline-end: calc(var(--spacing) * 3);
    }
  }
  .file\:font-medium {
    &::file-selector-button {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .file\:text-gray-700 {
    &::file-selector-button {
      color: var(--color-gray-700);
    }
  }
  .file\:not-italic {
    &::file-selector-button {
      font-style: normal;
    }
  }
  .placeholder\:text-gray-500 {
    &::placeholder {
      color: var(--color-gray-500);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:start-\[11px\] {
    &::before {
      content: var(--tw-content);
      inset-inline-start: 11px;
    }
  }
  .before\:start-px {
    &::before {
      content: var(--tw-content);
      inset-inline-start: 1px;
    }
  }
  .before\:top-0 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }
  }
  .before\:bottom-0 {
    &::before {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }
  }
  .before\:size-1\.5 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1.5);
      height: calc(var(--spacing) * 1.5);
    }
  }
  .before\:-translate-x-2\/4 {
    &::before {
      content: var(--tw-content);
      --tw-translate-x: calc(calc(2/4 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:-translate-y-2\/4 {
    &::before {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(2/4 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:border-s {
    &::before {
      content: var(--tw-content);
      border-inline-start-style: var(--tw-border-style);
      border-inline-start-width: 1px;
    }
  }
  .before\:border-border {
    &::before {
      content: var(--tw-content);
      border-color: var(--border);
    }
  }
  .before\:bg-card {
    &::before {
      content: var(--tw-content);
      background-color: var(--card);
    }
  }
  .after\:absolute {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .after\:inset-y-0 {
    &::after {
      content: var(--tw-content);
      inset-block: calc(var(--spacing) * 0);
    }
  }
  .after\:top-1\/2 {
    &::after {
      content: var(--tw-content);
      top: calc(1/2 * 100%);
    }
  }
  .after\:right-0 {
    &::after {
      content: var(--tw-content);
      right: calc(var(--spacing) * 0);
    }
  }
  .after\:left-0 {
    &::after {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .after\:h-8 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 8);
    }
  }
  .after\:w-10 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 10);
    }
  }
  .after\:w-\[6px\] {
    &::after {
      content: var(--tw-content);
      width: 6px;
    }
  }
  .after\:translate-x-\[-1px\] {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: -1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:-translate-y-1\/2 {
    &::after {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:rounded-full {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .after\:bg-border {
    &::after {
      content: var(--tw-content);
      background-color: var(--border);
    }
  }
  .after\:bg-zinc-950 {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-zinc-950);
    }
  }
  .after\:transition-all {
    &::after {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .last\:border-b-0 {
    &:last-child {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
  .last\:border-none {
    &:last-child {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .hover\:z-10 {
    &:hover {
      @media (hover: hover) {
        z-index: 10;
      }
    }
  }
  .hover\:overflow-y-auto {
    &:hover {
      @media (hover: hover) {
        overflow-y: auto;
      }
    }
  }
  .hover\:bg-blue-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-50);
      }
    }
  }
  .hover\:bg-blue-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-200);
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-blue-600\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-600) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-cyan-600\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(60.9% 0.126 221.723) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-cyan-600) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-cyan-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-700);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-gray-600\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-600) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-800\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(27.8% 0.033 256.848) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-gray-800) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-900);
      }
    }
  }
  .hover\:bg-green-600\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(62.7% 0.194 149.214) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-600) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-red-600\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(57.7% 0.245 27.325) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-600) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-red-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-700);
      }
    }
  }
  .hover\:bg-yellow-500\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(79.5% 0.184 86.047) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-500) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-yellow-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-600);
      }
    }
  }
  .hover\:bg-zinc-700\/70 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(37% 0.013 285.805) 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-zinc-700) 70%, transparent);
        }
      }
    }
  }
  .hover\:pe-\[5px\] {
    &:hover {
      @media (hover: hover) {
        padding-inline-end: 5px;
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-blue-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-700);
      }
    }
  }
  .hover\:text-gray-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-600);
      }
    }
  }
  .hover\:text-gray-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--primary);
      }
    }
  }
  .hover\:text-zinc-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-100);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:underline-offset-2 {
    &:hover {
      @media (hover: hover) {
        text-underline-offset: 2px;
      }
    }
  }
  .hover\:underline-offset-4 {
    &:hover {
      @media (hover: hover) {
        text-underline-offset: 4px;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .after\:hover\:h-10 {
    &::after {
      content: var(--tw-content);
      &:hover {
        @media (hover: hover) {
          height: calc(var(--spacing) * 10);
        }
      }
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:ring-ring {
    &:focus {
      --tw-ring-color: var(--ring);
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-gray-200 {
    &:focus-visible {
      --tw-ring-color: var(--color-gray-200);
    }
  }
  .focus-visible\:ring-neutral-200 {
    &:focus-visible {
      --tw-ring-color: var(--color-neutral-200);
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .aria-invalid\:border-red-200 {
    &[aria-invalid="true"] {
      border-color: var(--color-red-200);
    }
  }
  .aria-invalid\:ring-red-200 {
    &[aria-invalid="true"] {
      --tw-ring-color: var(--color-red-200);
    }
  }
  .data-\[state\=active\]\:bg-zinc-700\/70 {
    &[data-state="active"] {
      background-color: color-mix(in srgb, oklch(37% 0.013 285.805) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-700) 70%, transparent);
      }
    }
  }
  .data-\[state\=active\]\:text-zinc-100 {
    &[data-state="active"] {
      color: var(--color-zinc-100);
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:w-48 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 48);
    }
  }
  .sm\:w-56 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 56);
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:rounded-lg {
    @media (width >= 40rem) {
      border-radius: var(--radius);
    }
  }
  .sm\:border {
    @media (width >= 40rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .sm\:border-border {
    @media (width >= 40rem) {
      border-color: var(--border);
    }
  }
  .sm\:py-16 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .sm\:\[--kt-drawer-enable\:false\] {
    @media (width >= 40rem) {
      --kt-drawer-enable: false;
    }
  }
  .sm\:\[--kt-reparent-mode\:prepend\] {
    @media (width >= 40rem) {
      --kt-reparent-mode: prepend;
    }
  }
  .sm\:\[--kt-reparent-target\:\#parentTwo\] {
    @media (width >= 40rem) {
      --kt-reparent-target: #parentTwo;
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:aspect-auto {
    @media (width >= 48rem) {
      aspect-ratio: auto;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:rounded-md {
    @media (width >= 64rem) {
      border-radius: calc(var(--radius) - 2px);
    }
  }
  .lg\:shadow-md {
    @media (width >= 64rem) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .lg\:ring-1 {
    @media (width >= 64rem) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .lg\:ring-black {
    @media (width >= 64rem) {
      --tw-ring-color: var(--color-black);
    }
  }
  .xl\:flex {
    @media (width >= 80rem) {
      display: flex;
    }
  }
  .rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
  }
  .rtl\:transform {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
  .dark\:flex {
    &:is(.dark *) {
      display: flex;
    }
  }
  .dark\:hidden {
    &:is(.dark *) {
      display: none;
    }
  }
  .dark\:inline-flex {
    &:is(.dark *) {
      display: inline-flex;
    }
  }
  .dark\:divide-neutral-700 {
    &:is(.dark *) {
      :where(& > :not(:last-child)) {
        border-color: var(--color-neutral-700);
      }
    }
  }
  .dark\:border-blue-500 {
    &:is(.dark *) {
      border-color: var(--color-blue-500);
    }
  }
  .dark\:border-cyan-500 {
    &:is(.dark *) {
      border-color: var(--color-cyan-500);
    }
  }
  .dark\:border-gray-300 {
    &:is(.dark *) {
      border-color: var(--color-gray-300);
    }
  }
  .dark\:border-gray-600 {
    &:is(.dark *) {
      border-color: var(--color-gray-600);
    }
  }
  .dark\:border-green-500 {
    &:is(.dark *) {
      border-color: var(--color-green-500);
    }
  }
  .dark\:border-neutral-200 {
    &:is(.dark *) {
      border-color: var(--color-neutral-200);
    }
  }
  .dark\:border-neutral-300 {
    &:is(.dark *) {
      border-color: var(--color-neutral-300);
    }
  }
  .dark\:border-neutral-700 {
    &:is(.dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:border-neutral-800 {
    &:is(.dark *) {
      border-color: var(--color-neutral-800);
    }
  }
  .dark\:border-red-500 {
    &:is(.dark *) {
      border-color: var(--color-red-500);
    }
  }
  .dark\:border-white {
    &:is(.dark *) {
      border-color: var(--color-white);
    }
  }
  .dark\:border-yellow-400 {
    &:is(.dark *) {
      border-color: var(--color-yellow-400);
    }
  }
  .dark\:border-t-neutral-700 {
    &:is(.dark *) {
      border-top-color: var(--color-neutral-700);
    }
  }
  .dark\:border-t-neutral-800 {
    &:is(.dark *) {
      border-top-color: var(--color-neutral-800);
    }
  }
  .dark\:border-b-neutral-700 {
    &:is(.dark *) {
      border-bottom-color: var(--color-neutral-700);
    }
  }
  .dark\:border-b-neutral-800 {
    &:is(.dark *) {
      border-bottom-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-blue-500 {
    &:is(.dark *) {
      background-color: var(--color-blue-500);
    }
  }
  .dark\:bg-cyan-500 {
    &:is(.dark *) {
      background-color: var(--color-cyan-500);
    }
  }
  .dark\:bg-gray-600 {
    &:is(.dark *) {
      background-color: var(--color-gray-600);
    }
  }
  .dark\:bg-gray-700 {
    &:is(.dark *) {
      background-color: var(--color-gray-700);
    }
  }
  .dark\:bg-gray-800 {
    &:is(.dark *) {
      background-color: var(--color-gray-800);
    }
  }
  .dark\:bg-neutral-700 {
    &:is(.dark *) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:bg-neutral-800 {
    &:is(.dark *) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-red-500 {
    &:is(.dark *) {
      background-color: var(--color-red-500);
    }
  }
  .dark\:bg-yellow-400 {
    &:is(.dark *) {
      background-color: var(--color-yellow-400);
    }
  }
  .dark\:text-blue-500 {
    &:is(.dark *) {
      color: var(--color-blue-500);
    }
  }
  .dark\:text-cyan-500 {
    &:is(.dark *) {
      color: var(--color-cyan-500);
    }
  }
  .dark\:text-gray-100 {
    &:is(.dark *) {
      color: var(--color-gray-100);
    }
  }
  .dark\:text-gray-200 {
    &:is(.dark *) {
      color: var(--color-gray-200);
    }
  }
  .dark\:text-gray-300 {
    &:is(.dark *) {
      color: var(--color-gray-300);
    }
  }
  .dark\:text-green-500 {
    &:is(.dark *) {
      color: var(--color-green-500);
    }
  }
  .dark\:text-neutral-100 {
    &:is(.dark *) {
      color: var(--color-neutral-100);
    }
  }
  .dark\:text-neutral-200 {
    &:is(.dark *) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-neutral-300 {
    &:is(.dark *) {
      color: var(--color-neutral-300);
    }
  }
  .dark\:text-neutral-400 {
    &:is(.dark *) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:text-neutral-500 {
    &:is(.dark *) {
      color: var(--color-neutral-500);
    }
  }
  .dark\:text-red-500 {
    &:is(.dark *) {
      color: var(--color-red-500);
    }
  }
  .dark\:text-white {
    &:is(.dark *) {
      color: var(--color-white);
    }
  }
  .dark\:text-yellow-400 {
    &:is(.dark *) {
      color: var(--color-yellow-400);
    }
  }
  .dark\:file\:border-neutral-700 {
    &:is(.dark *) {
      &::file-selector-button {
        border-color: var(--color-neutral-700);
      }
    }
  }
  .dark\:file\:text-neutral-200 {
    &:is(.dark *) {
      &::file-selector-button {
        color: var(--color-neutral-200);
      }
    }
  }
  .dark\:placeholder\:text-neutral-400 {
    &:is(.dark *) {
      &::placeholder {
        color: var(--color-neutral-400);
      }
    }
  }
  .dark\:hover\:bg-blue-600 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-600);
        }
      }
    }
  }
  .dark\:hover\:bg-cyan-600 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-cyan-600);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-800 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-800);
        }
      }
    }
  }
  .dark\:hover\:bg-green-600 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-green-600);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-700 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-700);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800\/20 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(26.9% 0 0) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral-800) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-red-600 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-red-600);
        }
      }
    }
  }
  .dark\:hover\:bg-yellow-500 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-yellow-500);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-600 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-600);
        }
      }
    }
  }
  .dark\:focus-visible\:ring-neutral-700 {
    &:is(.dark *) {
      &:focus-visible {
        --tw-ring-color: var(--color-neutral-700);
      }
    }
  }
  .kt-accordion-active\:block {
    &[data-kt-accordion-item].active {
      display: block;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      display: block;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      display: block;
    }
  }
  .kt-accordion-active\:hidden {
    &[data-kt-accordion-item].active {
      display: none;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      display: none;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      display: none;
    }
  }
  .kt-accordion-active\:rotate-180 {
    &[data-kt-accordion-item].active {
      rotate: 180deg;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      rotate: 180deg;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      rotate: 180deg;
    }
  }
  .kt-accordion-active\:bg-gray-100 {
    &[data-kt-accordion-item].active {
      background-color: var(--color-gray-100);
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      background-color: var(--color-gray-100);
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      background-color: var(--color-gray-100);
    }
  }
  .rtl\:kt-accordion-active\:-rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      &[data-kt-accordion-item].active {
        rotate: calc(180deg * -1);
      }
      [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
        rotate: calc(180deg * -1);
      }
      [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
        rotate: calc(180deg * -1);
      }
    }
  }
  .kt-accordion-active\:dark\:bg-neutral-800 {
    &[data-kt-accordion-item].active {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .kt-accordion-selected\:bg-gray-100 {
    [data-kt-accordion-initialized] .selected {
      background-color: var(--color-gray-100);
    }
    [data-kt-accordion-initialized] .selected & {
      background-color: var(--color-gray-100);
    }
    [data-kt-accordion-initialized] &.selected {
      background-color: var(--color-gray-100);
    }
  }
  .kt-accordion-selected\:dark\:bg-neutral-800 {
    [data-kt-accordion-initialized] .selected {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
    [data-kt-accordion-initialized] .selected & {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
    [data-kt-accordion-initialized] &.selected {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .kt-collapse-active\:block {
    [data-kt-collapse-initialized].active & {
      display: block;
    }
    [data-kt-collapse-initialized].active {
      display: block;
    }
  }
  .kt-collapse-active\:hidden {
    [data-kt-collapse-initialized].active & {
      display: none;
    }
    [data-kt-collapse-initialized].active {
      display: none;
    }
  }
  .kt-collapse-active\:inline-flex {
    [data-kt-collapse-initialized].active & {
      display: inline-flex;
    }
    [data-kt-collapse-initialized].active {
      display: inline-flex;
    }
  }
  .kt-drawer-open\:translate-x-0 {
    &[data-kt-drawer-initialized].open {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    [data-kt-drawer-initialized].open & {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .kt-drawer-open\:translate-y-0 {
    &[data-kt-drawer-initialized].open {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    [data-kt-drawer-initialized].open & {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .kt-dropdown-open\:hidden {
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle]& {
      display: none;
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle] & {
      display: none;
    }
  }
  .kt-dropdown-open\:inline {
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle]& {
      display: inline;
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle] & {
      display: inline;
    }
  }
  .kt-dropdown-open\:bg-gray-100 {
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle]& {
      background-color: var(--color-gray-100);
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle] & {
      background-color: var(--color-gray-100);
    }
  }
  .kt-dropdown-open\:dark\:bg-neutral-800 {
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle]& {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle] & {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .kt-dropdown-selected\:bg-gray-100 {
    [data-kt-dropdown-initialized] .selected {
      background-color: var(--color-gray-100);
    }
    [data-kt-dropdown-initialized] .selected & {
      background-color: var(--color-gray-100);
    }
    [data-kt-dropdown-initialized] &.selected {
      background-color: var(--color-gray-100);
    }
  }
  .kt-dropdown-selected\:dark\:bg-neutral-800 {
    [data-kt-dropdown-initialized] .selected {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
    [data-kt-dropdown-initialized] .selected & {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
    [data-kt-dropdown-initialized] &.selected {
      &:is(.dark *) {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .kt-scrollspy-active\:text-primary {
    &[data-kt-scrollspy-anchor].active {
      color: var(--primary);
    }
    [data-kt-scrollspy-anchor].active & {
      color: var(--primary);
    }
  }
  .kt-scrollspy-active\:before\:bg-primary {
    &[data-kt-scrollspy-anchor].active {
      &::before {
        content: var(--tw-content);
        background-color: var(--primary);
      }
    }
    [data-kt-scrollspy-anchor].active & {
      &::before {
        content: var(--tw-content);
        background-color: var(--primary);
      }
    }
  }
  .kt-stepper-first\:hidden {
    [data-kt-stepper-initialized].first & {
      display: none;
    }
  }
  .kt-stepper-last\:hidden {
    [data-kt-stepper-initialized].last & {
      display: none;
    }
  }
  .kt-stepper-last\:inline-flex {
    [data-kt-stepper-initialized].last & {
      display: inline-flex;
    }
  }
  .kt-stepper-item-active\:bg-primary {
    &[data-kt-stepper-item].active {
      background-color: var(--primary);
    }
    [data-kt-stepper-item].active & {
      background-color: var(--primary);
    }
  }
  .kt-stepper-item-active\:text-primary-foreground {
    &[data-kt-stepper-item].active {
      color: var(--primary-foreground);
    }
    [data-kt-stepper-item].active & {
      color: var(--primary-foreground);
    }
  }
  .kt-stepper-item-completed\:hidden {
    &[data-kt-stepper-item].completed {
      display: none;
    }
    [data-kt-stepper-item].completed & {
      display: none;
    }
  }
  .kt-stepper-item-completed\:inline {
    &[data-kt-stepper-item].completed {
      display: inline;
    }
    [data-kt-stepper-item].completed & {
      display: inline;
    }
  }
  .kt-stepper-item-completed\:bg-green-500 {
    &[data-kt-stepper-item].completed {
      background-color: var(--color-green-500);
    }
    [data-kt-stepper-item].completed & {
      background-color: var(--color-green-500);
    }
  }
  .kt-stepper-item-completed\:text-white {
    &[data-kt-stepper-item].completed {
      color: var(--color-white);
    }
    [data-kt-stepper-item].completed & {
      color: var(--color-white);
    }
  }
  .kt-stepper-item-completed\:opacity-70 {
    &[data-kt-stepper-item].completed {
      opacity: 70%;
    }
    [data-kt-stepper-item].completed & {
      opacity: 70%;
    }
  }
  .kt-tab-active\:border-b-blue-600 {
    &[data-kt-tab-toggle].active {
      border-bottom-color: var(--color-blue-600);
    }
    [data-kt-tab-toggle].active & {
      border-bottom-color: var(--color-blue-600);
    }
    [data-kt-tabs-initialized]	[data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active)	& {
      border-bottom-color: var(--color-blue-600);
    }
  }
  .kt-tab-active\:text-blue-600 {
    &[data-kt-tab-toggle].active {
      color: var(--color-blue-600);
    }
    [data-kt-tab-toggle].active & {
      color: var(--color-blue-600);
    }
    [data-kt-tabs-initialized]	[data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active)	& {
      color: var(--color-blue-600);
    }
  }
  .kt-theme-switch-light\:bg-accent {
    [data-kt-theme-switch-mode='light'] & {
      background-color: var(--accent);
    }
  }
  .kt-theme-switch-dark\:bg-accent {
    [data-kt-theme-switch-mode='dark'] & {
      background-color: var(--accent);
    }
  }
  .kt-theme-switch-system\:bg-accent {
    [data-kt-theme-switch-mode='system'] & {
      background-color: var(--accent);
    }
  }
  .kt-toggle-password-active\:block {
    &[data-kt-toggle-password-initialized].active {
      display: block;
    }
    [data-kt-toggle-password-initialized].active & {
      display: block;
    }
  }
  .kt-toggle-password-active\:hidden {
    &[data-kt-toggle-password-initialized].active {
      display: none;
    }
    [data-kt-toggle-password-initialized].active & {
      display: none;
    }
  }
  .\[\&_\.line\:before\]\:sticky {
    & .line:before {
      position: sticky;
    }
  }
  .\[\&_\.line\:before\]\:left-2 {
    & .line:before {
      left: calc(var(--spacing) * 2);
    }
  }
  .\[\&_\.line\:before\]\:z-10 {
    & .line:before {
      z-index: 10;
    }
  }
  .\[\&_\.line\:before\]\:translate-y-\[-1px\] {
    & .line:before {
      --tw-translate-y: -1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&_\.line\:before\]\:pr-1 {
    & .line:before {
      padding-right: calc(var(--spacing) * 1);
    }
  }
  .\[\&_pre\]\:max-h-\[calc\(var\(--height\)-2rem\)\] {
    & pre {
      max-height: calc(var(--height) - 2rem);
    }
  }
  .\[\&_pre\]\:overflow-auto {
    & pre {
      overflow: auto;
    }
  }
  .\[\&_pre\]\:\!bg-transparent {
    & pre {
      background-color: transparent !important;
    }
  }
  .\[\&_pre\]\:pt-4 {
    & pre {
      padding-top: calc(var(--spacing) * 4);
    }
  }
  .\[\&_pre\]\:font-mono {
    & pre {
      font-family: var(--font-mono);
    }
  }
  .\[\&_pre\]\:text-sm {
    & pre {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\[\&_pre\]\:leading-relaxed {
    & pre {
      --tw-leading: var(--leading-relaxed);
      line-height: var(--leading-relaxed);
    }
  }
  .\[\&_svg\]\:-ms-px {
    & svg {
      margin-inline-start: -1px;
    }
  }
  .\[\&_svg\]\:size-3 {
    & svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
  .\[\&_svg\]\:size-3\.5 {
    & svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .\[\&_svg\]\:shrink-0 {
    & svg {
      flex-shrink: 0;
    }
  }
  .\[\&\>svg\]\:size-3\.5 {
    &>svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .\[\&\>svg\]\:opacity-100 {
    &>svg {
      opacity: 100%;
    }
  }
  .\[\&\[readonly\]\]\:opacity-70 {
    &[readonly] {
      opacity: 70%;
    }
  }
  .\[\&\[type\=file\]\]\:py-0 {
    &[type=file] {
      padding-block: calc(var(--spacing) * 0);
    }
  }
}
@layer components {
  .kt-avatar {
    position: relative;
    display: flex;
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
    flex-shrink: 0;
  }
  .kt-avatar-image {
    overflow: hidden;
    border-radius: calc(infinity * 1px);
    img {
      aspect-ratio: 1 / 1;
      height: 100%;
      width: 100%;
    }
  }
  .kt-avatar-fallback {
    display: flex;
    height: 100%;
    width: 100%;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--accent);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .kt-avatar-indicator {
    position: absolute;
    display: flex;
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
    align-items: center;
    justify-content: center;
  }
  .kt-avatar-status {
    display: flex;
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
    align-items: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 2px;
    border-color: var(--background);
    &.kt-avatar-status-online {
      background-color: var(--color-green-600);
    }
    &.kt-avatar-status-offline {
      background-color: var(--mono);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--mono) 50%, transparent);
      }
    }
    &.kt-avatar-status-busy {
      background-color: var(--color-yellow-600);
    }
    &.kt-avatar-status-away {
      background-color: var(--color-blue-600);
    }
  }
}
@layer components {
  .kt-accordion-item {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    &:last-child {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
  .kt-accordion-toggle {
    display: flex;
    width: 100%;
    cursor: pointer;
    align-items: center;
    justify-content: space-between;
    gap: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 4);
    text-align: start;
  }
  .kt-accordion-title {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--mono);
  }
  .kt-accordion-content {
    overflow: hidden;
    transition-property: height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .kt-accordion-wrapper {
    padding-bottom: calc(var(--spacing) * 4);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--foreground);
  }
  .kt-accordion-indicator {
    display: inline-flex;
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
    align-items: center;
    color: var(--muted-foreground);
  }
  .kt-accordion-indicator-on {
    display: block;
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
    flex-shrink: 0;
    &[data-kt-accordion-item].active {
      display: none;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      display: none;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      display: none;
    }
  }
  .kt-accordion-indicator-off {
    display: none;
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
    flex-shrink: 0;
    &[data-kt-accordion-item].active {
      display: block;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      display: block;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      display: block;
    }
  }
  .kt-accordion.kt-accordion-outline {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 3.5);
    .kt-accordion-item {
      border-radius: var(--radius);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--border);
    }
    .kt-accordion-content {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
      border-color: var(--border);
    }
    .kt-accordion-toggle {
      padding: calc(var(--spacing) * 4);
    }
    .kt-accordion-wrapper {
      padding: calc(var(--spacing) * 4);
    }
  }
}
@layer components {
  .kt-accordion-menu {
    display: flex;
    width: 100%;
    flex-direction: column;
    row-gap: calc(var(--spacing) * 1);
  }
  .kt-accordion-menu-content {
    overflow: hidden;
    padding-inline-start: calc(var(--spacing) * 6);
    transition-property: height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .kt-accordion-menu-sub {
    width: 100%;
    row-gap: calc(var(--spacing) * 1);
  }
  .kt-accordion-menu-item {
    width: 100%;
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .kt-accordion-menu-toggle {
    display: flex;
    width: 100%;
    align-items: center;
    column-gap: calc(var(--spacing) * 2.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &[data-kt-accordion-item].active {
      background-color: var(--accent);
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      background-color: var(--accent);
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      background-color: var(--accent);
    }
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      flex-shrink: 0;
      color: var(--muted-foreground);
    }
  }
  .kt-accordion-menu-link {
    display: flex;
    width: 100%;
    align-items: center;
    column-gap: calc(var(--spacing) * 2.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    [data-kt-accordion-initialized] .selected {
      background-color: var(--accent);
    }
    [data-kt-accordion-initialized] .selected & {
      background-color: var(--accent);
    }
    [data-kt-accordion-initialized] &.selected {
      background-color: var(--accent);
    }
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      flex-shrink: 0;
      color: var(--muted-foreground);
    }
  }
  .kt-accordion-menu-indicator {
    margin-inline-start: auto;
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
    flex-shrink: 0;
    color: var(--muted-foreground);
    &[data-kt-accordion-item].active {
      rotate: 180deg;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      rotate: 180deg;
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      rotate: 180deg;
    }
  }
}
@layer components {
  [dir='rtl'] .kt-accordion-menu-indicator {
    &[data-kt-accordion-item].active {
      rotate: calc(180deg * -1);
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle] & {
      rotate: calc(180deg * -1);
    }
    [data-kt-accordion-item].active > [data-kt-accordion-toggle]& {
      rotate: calc(180deg * -1);
    }
  }
}
@layer components {
  .kt-alert {
    display: flex;
    width: 100%;
    align-items: stretch;
  }
  .kt-alert-title {
    flex-grow: 1;
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .kt-alert-toolbar {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 2.5);
  }
  .kt-alert-description {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    & p {
      margin-bottom: calc(var(--spacing) * 2);
    }
    & p {
      --tw-leading: var(--leading-relaxed);
      line-height: var(--leading-relaxed);
    }
  }
  .kt-alert-content {
    width: 100%;
    flex-grow: 1;
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    .kt-alert-title {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .kt-alert-icon {
    flex-shrink: 0;
  }
  .kt-alert-close {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
    flex-shrink: 0;
    cursor: pointer;
    i {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      color: var(--muted-foreground);
    }
    > svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      color: var(--muted-foreground);
    }
    &:focus,	&:hover {
      i,	> svg {
        color: var(--foreground);
      }
    }
  }
  .kt-alert {
    gap: calc(var(--spacing) * 2.5);
    border-radius: var(--radius);
    padding: calc(var(--spacing) * 3.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    .kt-alert-icon svg {
      width: calc(var(--spacing) * 5);
      height: calc(var(--spacing) * 5);
    }
  }
  .kt-alert-sm {
    gap: calc(var(--spacing) * 1.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    .kt-alert-close {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
      > svg {
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
        color: var(--muted-foreground);
      }
    }
    .kt-alert-icon svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .kt-alert-lg {
    gap: calc(var(--spacing) * 2.5);
    border-radius: calc(var(--radius) - 2px);
    padding: calc(var(--spacing) * 4);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    .kt-alert-icon svg {
      width: calc(var(--spacing) * 6);
      height: calc(var(--spacing) * 6);
    }
  }
  .kt-alert {
    background-color: var(--muted);
    color: var(--foreground);
  }
  .kt-alert-primary {
    background-color: var(--primary);
    color: var(--primary-foreground);
    .kt-alert-close > svg {
      color: var(--primary-foreground);
    }
  }
  .kt-alert-destructive {
    background-color: var(--destructive);
    color: var(--destructive-foreground);
    .kt-alert-close > svg {
      color: var(--destructive-foreground);
    }
  }
  .kt-alert-success {
    background-color: var(--color-green-500);
    color: var(--color-white);
    .kt-alert-close > svg {
      color: var(--color-white);
    }
  }
  .kt-alert-info {
    background-color: var(--color-violet-600);
    color: var(--color-white);
    .kt-alert-close > svg {
      color: var(--color-white);
    }
  }
  .kt-alert-warning {
    background-color: var(--color-yellow-500);
    color: var(--color-white);
    .kt-alert-close > svg {
      color: var(--color-white);
    }
  }
  .kt-alert-mono {
    background-color: var(--mono);
    color: var(--mono-foreground);
    .kt-alert-close > svg {
      color: var(--mono-foreground);
    }
  }
  .kt-alert-mono {
    &.kt-alert-primary {
      .kt-alert-icon {
        color: var(--primary);
      }
    }
    &.kt-alert-success {
      .kt-alert-icon {
        color: var(--color-green-500);
      }
    }
    &.kt-alert-destructive {
      .kt-alert-icon {
        color: var(--destructive);
      }
    }
    &.kt-alert-warning {
      .kt-alert-icon {
        color: var(--color-yellow-500);
      }
    }
    &.kt-alert-info {
      .kt-alert-icon {
        color: var(--color-violet-600);
      }
    }
  }
  .kt-alert-outline {
    .kt-alert-close {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      flex-shrink: 0;
      cursor: pointer;
      > svg {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
        color: var(--muted-foreground);
      }
      &:focus,	&:hover {
        > svg {
          color: var(--foreground);
        }
      }
    }
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--background);
    color: var(--foreground);
    &.kt-alert-primary {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--border);
      background-color: var(--background);
      color: var(--primary);
    }
    &.kt-alert-destructive {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--border);
      background-color: var(--background);
      color: var(--destructive);
    }
    &.kt-alert-success {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--border);
      background-color: var(--background);
      color: var(--color-green-500);
    }
    &.kt-alert-info {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--border);
      background-color: var(--background);
      color: var(--color-violet-600);
    }
    &.kt-alert-warning {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--border);
      background-color: var(--background);
      color: var(--color-yellow-500);
    }
    &.kt-alert-mono {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--border);
      background-color: var(--background);
      color: var(--mono);
    }
  }
  .kt-alert-light {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--muted);
    color: var(--foreground);
    .kt-alert-icon > svg {
      color: var(--muted-foreground);
    }
    .kt-alert-close {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      flex-shrink: 0;
      cursor: pointer;
      > svg {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
        color: var(--muted-foreground);
      }
      &:focus,	&:hover {
        > svg {
          color: var(--foreground);
        }
      }
    }
    &.kt-alert-primary {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--primary) 10%, transparent);
      }
      background-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--primary) 5%, transparent);
      }
      color: var(--foreground);
      .kt-alert-icon > svg {
        color: var(--primary);
      }
    }
    &.kt-alert-destructive {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 5%, transparent);
      }
      color: var(--foreground);
      .kt-alert-icon > svg {
        color: var(--destructive);
      }
    }
    &.kt-alert-success {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-green-200);
      background-color: var(--color-green-50);
      color: var(--foreground);
      &:is(.dark *) {
        border-color: color-mix(in srgb, oklch(26.6% 0.065 152.934) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-green-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(26.6% 0.065 152.934) 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-950) 30%, transparent);
        }
      }
      .kt-alert-icon > svg {
        color: var(--color-green-500);
      }
    }
    &.kt-alert-info {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-violet-200);
      background-color: var(--color-violet-50);
      color: var(--foreground);
      &:is(.dark *) {
        border-color: color-mix(in srgb, oklch(28.3% 0.141 291.089) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-violet-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.3% 0.141 291.089) 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-violet-950) 30%, transparent);
        }
      }
      .kt-alert-icon > svg {
        color: var(--color-violet-500);
      }
    }
    &.kt-alert-warning {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-yellow-200);
      background-color: var(--color-yellow-50);
      color: var(--foreground);
      &:is(.dark *) {
        border-color: color-mix(in srgb, oklch(28.6% 0.066 53.813) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-yellow-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.6% 0.066 53.813) 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-950) 30%, transparent);
        }
      }
      .kt-alert-icon > svg {
        color: var(--color-yellow-500);
      }
    }
  }
}
@layer components {
  .kt-form {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .kt-form-item {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 2.5);
  }
  .kt-form-control {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .kt-form-control-inline {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 2.5);
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .kt-form-label {
    display: flex;
    width: 100%;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    &:is(:where(.peer):disabled ~ *) {
      cursor: not-allowed;
    }
    &:is(:where(.peer):disabled ~ *) {
      opacity: 50%;
    }
    .kt-switch:disabled + &,	.kt-checkbox:disabled + &,	.kt-radio:disabled + & {
      cursor: not-allowed;
      opacity: 50%;
    }
  }
  .kt-form-description {
    margin-top: calc(var(--spacing) * -1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--secondary-foreground);
  }
  .kt-form-message {
    margin-top: calc(var(--spacing) * -1);
    display: none;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--destructive);
  }
  .kt-form-actions {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: calc(var(--spacing) * 2.5);
  }
  .kt-form-item:has([aria-invalid='true']) {
    .kt-form-message {
      display: block;
    }
    .kt-form-description {
      display: none;
    }
  }
}
@layer components {
  .kt-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background-color: var(--secondary);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    color: var(--accent-foreground);
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus {
      --tw-ring-color: var(--ring);
    }
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    & svg {
      margin-inline-start: -1px;
    }
    & svg {
      flex-shrink: 0;
    }
  }
  .kt-badge-primary {
    background-color: var(--primary);
    color: var(--primary-foreground);
  }
  .kt-badge-secondary {
    background-color: var(--secondary);
    color: var(--accent-foreground);
  }
  .kt-badge-success {
    background-color: var(--color-green-500);
    color: var(--color-white);
  }
  .kt-badge-warning {
    background-color: var(--color-yellow-400);
    color: var(--color-white);
  }
  .kt-badge-info {
    background-color: var(--color-violet-500);
    color: var(--color-white);
  }
  .kt-badge-mono {
    background-color: var(--mono);
    color: var(--mono-foreground);
  }
  .kt-badge-destructive {
    background-color: var(--destructive);
    color: var(--destructive-foreground);
  }
  .kt-badge-stroke {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--background);
    color: var(--secondary-foreground);
  }
  .kt-badge-disabled {
    pointer-events: none;
    opacity: 50%;
  }
  .kt-badge-lg {
    height: calc(var(--spacing) * 7);
    min-width: calc(var(--spacing) * 7);
    gap: calc(var(--spacing) * 1.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: 0.5rem;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    & svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .kt-badge {
    height: calc(var(--spacing) * 6);
    min-width: calc(var(--spacing) * 6);
    gap: calc(var(--spacing) * 1.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: 0.45rem;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    & svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .kt-badge-sm {
    height: calc(var(--spacing) * 5);
    min-width: calc(var(--spacing) * 5);
    gap: calc(var(--spacing) * 1);
    border-radius: calc(var(--radius) - 4px);
    padding-inline: 0.325rem;
    font-size: 0.6875rem;
    --tw-leading: 0.75rem;
    line-height: 0.75rem;
    & svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
  .kt-badge-xs {
    height: calc(var(--spacing) * 4);
    min-width: calc(var(--spacing) * 4);
    gap: calc(var(--spacing) * 1);
    border-radius: calc(var(--radius) - 4px);
    padding-inline: 0.25rem;
    font-size: 0.625rem;
    --tw-leading: 0.5rem;
    line-height: 0.5rem;
    & svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
  .kt-badge-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--muted);
    color: var(--secondary-foreground);
    &.kt-badge-primary {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-blue-100);
      background-color: var(--color-blue-50);
      color: var(--color-blue-700);
      &:is(.dark *) {
        border-color: var(--color-blue-950);
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.2% 0.091 267.935) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-blue-600);
      }
    }
    &.kt-badge-secondary {
      border-color: var(--border);
      background-color: var(--secondary);
      color: var(--foreground);
      &:is(.dark *) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 50%, transparent);
        }
      }
    }
    &.kt-badge-success {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-green-200);
      background-color: var(--color-green-50);
      color: var(--color-green-700);
      &:is(.dark *) {
        border-color: var(--color-green-950);
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(26.6% 0.065 152.934) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-green-600);
      }
    }
    &.kt-badge-warning.kt-badge-outline {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-yellow-100);
      background-color: var(--color-yellow-50);
      color: var(--color-yellow-700);
      &:is(.dark *) {
        border-color: var(--color-yellow-950);
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.6% 0.066 53.813) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-yellow-600);
      }
    }
    &.kt-badge-info.kt-badge-outline {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-violet-100);
      background-color: var(--color-violet-50);
      color: var(--color-violet-700);
      &:is(.dark *) {
        border-color: var(--color-violet-950);
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.3% 0.141 291.089) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-violet-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-violet-600);
      }
    }
    &.kt-badge-mono.kt-badge-outline {
      border-color: var(--mono);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--mono) 10%, transparent);
      }
      background-color: var(--mono);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--mono) 10%, transparent);
      }
      color: var(--mono);
    }
    &.kt-badge-destructive.kt-badge-outline {
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: var(--color-red-100);
      background-color: var(--color-red-50);
      color: var(--color-red-700);
      &:is(.dark *) {
        border-color: var(--color-red-950);
      }
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(25.8% 0.092 26.042) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-red-600);
      }
    }
  }
  .kt-badge-light {
    &.kt-badge-primary {
      background-color: var(--color-blue-100);
      color: var(--color-blue-800);
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.2% 0.091 267.935) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-blue-600);
      }
    }
    &.kt-badge-secondary {
      background-color: var(--secondary);
      color: var(--secondary-foreground);
      &:is(.dark *) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 50%, transparent);
        }
      }
    }
    &.kt-badge-success {
      background-color: var(--color-green-100);
      color: var(--color-green-800);
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(26.6% 0.065 152.934) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-green-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-green-600);
      }
    }
    &.kt-badge-warning {
      background-color: var(--color-yellow-100);
      color: var(--color-yellow-800);
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.6% 0.066 53.813) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-yellow-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-yellow-600);
      }
    }
    &.kt-badge-info {
      background-color: var(--color-violet-100);
      color: var(--color-violet-800);
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(28.3% 0.141 291.089) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-violet-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-violet-600);
      }
    }
    &.kt-badge-mono {
      background-color: var(--mono);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--mono) 10%, transparent);
      }
      color: var(--mono);
    }
    &.kt-badge-destructive {
      background-color: var(--color-red-100);
      color: var(--color-red-800);
      &:is(.dark *) {
        background-color: color-mix(in srgb, oklch(25.8% 0.092 26.042) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-red-950) 50%, transparent);
        }
      }
      &:is(.dark *) {
        color: var(--color-red-600);
      }
    }
  }
  .kt-badge-ghost {
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 0);
    &.kt-badge-primary {
      color: var(--primary);
    }
    &.kt-badge-secondary {
      color: var(--secondary-foreground);
    }
    &.kt-badge-destructive {
      color: var(--destructive);
    }
    &.kt-badge-success {
      color: var(--color-green-500);
    }
    &.kt-badge-warning {
      color: var(--color-yellow-500);
    }
    &.kt-badge-info {
      color: var(--color-violet-500);
    }
    &.kt-badge-mono {
      color: var(--mono);
    }
  }
  .kt-badge-btn {
    margin-inline-end: calc(var(--spacing) * -0.5);
    display: inline-flex;
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border-radius: calc(var(--radius) - 2px);
    padding: calc(var(--spacing) * 0);
    --tw-leading: 1;
    line-height: 1;
    i {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      opacity: 70%;
      transition-property: opacity;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    > svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
      opacity: 70%;
      transition-property: opacity;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    &:focus,	&:hover {
      i,	> svg {
        opacity: 100%;
      }
    }
  }
  .kt-badge-dot {
    width: calc(var(--spacing) * 1.5);
    height: calc(var(--spacing) * 1.5);
    border-radius: calc(infinity * 1px);
    background-color: currentcolor;
    opacity: 75%;
  }
}
@layer components {
  .kt-link {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    border-radius: calc(var(--radius) - 2px);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--color-neutral-200);
    }
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:is(.dark *) {
      &:focus-visible {
        --tw-ring-color: var(--color-neutral-700);
      }
    }
  }
  .kt-link {
    color: var(--primary);
  }
  .kt-link-inverse {
    color: var(--background);
  }
  .kt-link-mono {
    color: var(--mono);
  }
  .kt-link {
    gap: calc(var(--spacing) * 1);
    font-size: 0.8125rem;
    --tw-leading: var(--text-sm--line-height);
    line-height: var(--text-sm--line-height);
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
    i {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .kt-link-sm {
    gap: calc(var(--spacing) * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
    i {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .kt-link-lg {
    gap: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
    i {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .kt-link-underline {
    text-decoration-style: solid;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
    &:hover {
      @media (hover: hover) {
        text-underline-offset: 4px;
      }
    }
  }
  .kt-link-underlined {
    text-decoration-line: underline;
    text-decoration-style: solid;
    text-underline-offset: 4px;
  }
  .kt-link-dashed {
    text-decoration-style: dashed;
    text-decoration-thickness: 1px;
  }
  .kt-link-disabled {
    pointer-events: none;
    opacity: 50%;
  }
}
@layer components {
  .kt-btn {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    --tw-ring-offset-color: var(--background);
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    flex-shrink: 0;
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    svg {
      flex-shrink: 0;
    }
  }
  .kt-btn {
    background-color: var(--primary);
    color: var(--primary-foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
    &.active {
      background-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }
  .kt-btn-mono {
    background-color: var(--mono);
    color: var(--mono-foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--mono);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--mono) 90%, transparent);
        }
      }
    }
    &.active {
      background-color: var(--mono);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--mono) 90%, transparent);
      }
    }
  }
  .kt-btn-destructive {
    background-color: var(--destructive);
    color: var(--destructive-foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
    &.active {
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }
  .kt-btn-secondary {
    background-color: var(--secondary);
    color: var(--secondary-foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--secondary);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--foreground);
      }
    }
    &.active {
      background-color: var(--secondary);
    }
    &.active {
      color: var(--foreground);
    }
    i {
      color: var(--muted-foreground);
    }
    svg {
      color: var(--muted-foreground);
    }
    &:hover,	&.active {
      i {
        color: var(--muted-foreground);
      }
      svg {
        color: var(--muted-foreground);
      }
    }
  }
  .kt-btn-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: var(--background);
    color: var(--secondary-foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
    &.active {
      background-color: var(--accent);
    }
    &.active {
      color: var(--accent-foreground);
    }
    i {
      color: var(--muted-foreground);
    }
    svg {
      color: var(--muted-foreground);
    }
    &:hover,	&.active {
      i {
        color: var(--secondary-foreground);
      }
      svg {
        color: var(--secondary-foreground);
      }
    }
    &.kt-btn-primary {
      border-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--primary) 10%, transparent);
      }
      background-color: var(--primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--primary) 10%, transparent);
      }
      color: var(--primary);
      &:hover {
        @media (hover: hover) {
          background-color: var(--primary);
        }
      }
      &:hover {
        @media (hover: hover) {
          color: var(--primary-foreground);
        }
      }
      &.active {
        border-color: var(--primary);
      }
      &.active {
        background-color: var(--primary);
      }
      &.active {
        color: var(--primary-foreground);
      }
      i {
        color: var(--primary);
      }
      svg {
        color: var(--primary);
      }
      &:hover,	&.active {
        i {
          color: var(--primary-foreground);
        }
        svg {
          color: var(--primary-foreground);
        }
      }
    }
    &.kt-btn-destructive {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
      color: var(--destructive);
      &:hover {
        @media (hover: hover) {
          background-color: var(--destructive);
        }
      }
      &:hover {
        @media (hover: hover) {
          color: var(--destructive-foreground);
        }
      }
      &.active {
        border-color: var(--destructive);
      }
      &.active {
        background-color: var(--destructive);
      }
      &.active {
        color: var(--destructive-foreground);
      }
      i {
        color: var(--destructive);
      }
      svg {
        color: var(--destructive);
      }
      &:hover,	&.active {
        i {
          color: var(--destructive-foreground);
        }
        svg {
          color: var(--destructive-foreground);
        }
      }
    }
  }
  .kt-btn-ghost {
    background-color: transparent;
    color: var(--accent-foreground);
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
    &.active {
      background-color: var(--accent);
    }
    &.active {
      color: var(--accent-foreground);
    }
    &:not(.kt-btn-primary):not(.kt-btn-destructive) {
      i {
        color: var(--muted-foreground);
      }
      svg {
        color: var(--muted-foreground);
      }
      &:hover,	&.active {
        i {
          color: var(--secondary-foreground);
        }
        svg {
          color: var(--secondary-foreground);
        }
      }
    }
    &.kt-btn-primary {
      color: var(--primary);
      &:hover {
        @media (hover: hover) {
          background-color: var(--primary);
        }
      }
      &:hover {
        @media (hover: hover) {
          color: var(--primary-foreground);
        }
      }
      &.active {
        background-color: var(--primary);
      }
      &.active {
        color: var(--primary-foreground);
      }
    }
    &.kt-btn-destructive {
      color: var(--destructive);
      &:hover {
        @media (hover: hover) {
          background-color: var(--destructive);
        }
      }
      &:hover {
        @media (hover: hover) {
          color: var(--destructive-foreground);
        }
      }
      &.active {
        background-color: var(--destructive);
      }
      &.active {
        color: var(--destructive-foreground);
      }
    }
  }
  .kt-btn-dim {
    background-color: transparent;
    color: var(--muted-foreground);
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--foreground);
      }
    }
    &.active {
      background-color: transparent;
    }
    &.active {
      color: var(--foreground);
    }
    i {
      color: var(--muted-foreground);
    }
    svg {
      color: var(--muted-foreground);
    }
    &:hover,	&.active {
      i {
        color: var(--secondary-foreground);
      }
      svg {
        color: var(--secondary-foreground);
      }
    }
  }
  .kt-btn {
    height: calc(var(--spacing) * 8.5);
    gap: calc(var(--spacing) * 1.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 3);
    font-size: 0.8125rem;
    --tw-leading: var(--text-sm--line-height);
    line-height: var(--text-sm--line-height);
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
    i {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    &.kt-btn-icon {
      width: calc(var(--spacing) * 8.5);
      height: calc(var(--spacing) * 8.5);
      padding: calc(var(--spacing) * 0);
    }
  }
  .kt-btn-lg {
    height: calc(var(--spacing) * 10);
    gap: calc(var(--spacing) * 1.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 4);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
    i {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    &.kt-btn-icon {
      width: calc(var(--spacing) * 10);
      height: calc(var(--spacing) * 10);
      padding: calc(var(--spacing) * 0);
    }
  }
  .kt-btn-sm {
    height: calc(var(--spacing) * 7);
    gap: calc(var(--spacing) * 1.25);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
    i {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    &.kt-btn-icon {
      width: calc(var(--spacing) * 7);
      height: calc(var(--spacing) * 7);
      padding: calc(var(--spacing) * 0);
    }
  }
}
@layer components {
  .kt-label {
    display: inline-flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--foreground);
    .kt-switch:disabled + &,	.kt-checkbox:disabled + &,	.kt-radio:disabled + & {
      cursor: not-allowed;
      opacity: 50%;
    }
  }
  .kt-label-secondary {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
}
@layer components {
  .kt-card {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    border-radius: calc(var(--radius) + 4px);
    color: var(--card-foreground);
  }
  .kt-card {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--card);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
  }
  .kt-card-header {
    display: flex;
    min-height: calc(var(--spacing) * 14);
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
    gap: calc(var(--spacing) * 2.5);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 5);
  }
  .kt-card-footer {
    display: flex;
    align-items: center;
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 4);
  }
  .kt-card-content {
    flex-grow: 1;
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 5);
  }
  .kt-card-table {
    display: grid;
    flex-grow: 1;
    .kt-table-border {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
    .kt-table {
      th,	td {
        &:first-child {
          padding-inline-start: calc(var(--spacing) * 5);
        }
        &:last-child {
          padding-inline-end: calc(var(--spacing) * 5);
        }
      }
    }
  }
  .kt-card-grid {
    & .kt-card-header,	& .kt-card-footer {
      padding-inline: calc(var(--spacing) * 5);
    }
    .kt-card-content {
      padding: 0;
      .kt-table {
        border: 0;
        th:first-child,	td:first-child {
          padding-inline-start: calc(var(--spacing) * 5);
          &.kt-table-cell-center {
            padding-inline-end: calc(var(--spacing) * 5);
          }
        }
        th:last-child,	td:last-child {
          padding-inline-end: calc(var(--spacing) * 5);
          &.table-cell-center {
            padding-inline-start: calc(var(--spacing) * 5);
          }
        }
      }
    }
  }
  .kt-card-heading {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .kt-card-toolbar {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 2.5);
  }
  .kt-card-title {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .kt-card-description {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--muted-foreground);
  }
  .kt-card-group {
    flex-grow: 1;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 5);
    &:last-child {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
    & + .kt-card-footer {
      border-top-style: var(--tw-border-style);
      border-top-width: 0px;
    }
  }
  .kt-card-accent {
    background-color: var(--muted);
    padding: calc(var(--spacing) * 1);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    .kt-card-header {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
    .kt-card-content {
      border-top-left-radius: calc(var(--radius) + 4px);
      border-top-right-radius: calc(var(--radius) + 4px);
      background-color: var(--card);
      &:last-child {
        border-bottom-right-radius: calc(var(--radius) + 4px);
        border-bottom-left-radius: calc(var(--radius) + 4px);
      }
    }
    .kt-card-table {
      border-radius: calc(var(--radius) + 4px);
      background-color: var(--card);
      &:last-child {
        border-bottom-right-radius: calc(var(--radius) + 4px);
        border-bottom-left-radius: calc(var(--radius) + 4px);
      }
    }
    .kt-card-footer {
      margin-top: 2px;
      border-bottom-right-radius: calc(var(--radius) + 4px);
      border-bottom-left-radius: calc(var(--radius) + 4px);
      border-top-style: var(--tw-border-style);
      border-top-width: 0px;
      background-color: var(--card);
    }
  }
  .kt-card-border {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
  }
  .kt-card-rounded-t {
    border-top-left-radius: calc(var(--radius) + 4px);
    border-top-right-radius: calc(var(--radius) + 4px);
  }
  .kt-card-rounded-b {
    border-bottom-right-radius: calc(var(--radius) + 4px);
    border-bottom-left-radius: calc(var(--radius) + 4px);
  }
}
@layer components {
  .kt-checkbox {
    cursor: pointer;
    appearance: none;
    background-position: center;
    background-repeat: no-repeat;
    flex-shrink: 0;
    border-radius: calc(var(--radius) - 4px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: var(--background);
    --tw-ring-offset-color: var(--background);
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 50%;
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
  }
  .kt-checkbox {
    &:checked {
      border-color: var(--primary);
    }
    &:checked {
      background-color: var(--primary);
    }
    &:checked {
      color: var(--primary-foreground);
    }
    &:indeterminate {
      border-color: var(--primary);
    }
    &:indeterminate {
      background-color: var(--primary);
    }
    &:indeterminate {
      color: var(--primary-foreground);
    }
  }
  .kt-checkbox-mono {
    &:checked {
      border-color: var(--mono);
    }
    &:checked {
      background-color: var(--mono);
    }
    &:checked {
      color: var(--mono-foreground);
    }
    &:indeterminate {
      border-color: var(--mono);
    }
    &:indeterminate {
      background-color: var(--mono);
    }
    &:indeterminate {
      color: var(--mono-foreground);
    }
  }
  .kt-checkbox {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
    &:checked,	&[aria-checked='true'] {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='9' viewBox='0 0 12 9' fill='none'%3E%3Cpath d='M10.3667 0.541643L4.80007 6.10831L1.56674 2.87498C1.41061 2.71977 1.1994 2.63265 0.979241 2.63265C0.759086 2.63265 0.547876 2.71977 0.391741 2.87498C0.236532 3.03111 0.149414 3.24232 0.149414 3.46248C0.149414 3.68263 0.236532 3.89384 0.391741 4.04998L4.21674 7.87498C4.37288 8.03019 4.58409 8.1173 4.80424 8.1173C5.0244 8.1173 5.23561 8.03019 5.39174 7.87498L11.5417 1.72498C11.6198 1.64751 11.6818 1.55534 11.7241 1.45379C11.7665 1.35224 11.7882 1.24332 11.7882 1.13331C11.7882 1.0233 11.7665 0.914379 11.7241 0.81283C11.6818 0.711281 11.6198 0.619113 11.5417 0.541643C11.3856 0.386434 11.1744 0.299316 10.9542 0.299316C10.7341 0.299316 10.5229 0.386434 10.3667 0.541643Z' fill='white'/%3E%3C/svg%3E");
    }
    &:indeterminate {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 10h8'/%3E%3C/svg%3E");
    }
  }
  .kt-checkbox {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .kt-checkbox-sm {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
    &:checked,	&[aria-checked='true'] {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='7' viewBox='0 0 10 7' fill='none'%3E%3Cpath d='M8.4932 0.233321L4.03986 4.68665L1.4532 2.09999C1.32829 1.97582 1.15932 1.90613 0.983198 1.90613C0.807074 1.90613 0.638106 1.97582 0.513198 2.09999C0.38903 2.2249 0.319336 2.39386 0.319336 2.56999C0.319336 2.74611 0.38903 2.91508 0.513198 3.03999L3.5732 6.09999C3.69811 6.22415 3.86707 6.29385 4.0432 6.29385C4.21932 6.29385 4.38829 6.22415 4.5132 6.09999L9.4332 1.17999C9.49568 1.11801 9.54528 1.04428 9.57912 0.963038C9.61297 0.881799 9.6304 0.794662 9.6304 0.706655C9.6304 0.618647 9.61297 0.53151 9.57912 0.45027C9.54528 0.369031 9.49568 0.295296 9.4332 0.233321C9.30829 0.109154 9.13932 0.0394592 8.9632 0.0394592C8.78707 0.0394592 8.61811 0.109154 8.4932 0.233321Z' fill='white'/%3E%3C/svg%3E");
    }
    &:indeterminate {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 10h8'/%3E%3C/svg%3E");
    }
  }
  .kt-checkbox-lg {
    width: calc(var(--spacing) * 5.5);
    height: calc(var(--spacing) * 5.5);
    &:checked,	&[aria-checked='true'] {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='10' viewBox='0 0 14 10' fill='none'%3E%3Cpath d='M11.8035 1.19582L5.68018 7.31915L2.12351 3.76249C1.95176 3.59176 1.71943 3.49593 1.47726 3.49593C1.23509 3.49593 1.00276 3.59176 0.831013 3.76249C0.660283 3.93424 0.564453 4.16657 0.564453 4.40874C0.564453 4.65091 0.660283 4.88324 0.831013 5.05499L5.03851 9.26249C5.21026 9.43322 5.44259 9.52905 5.68476 9.52905C5.92693 9.52905 6.15926 9.43322 6.33101 9.26249L13.096 2.49749C13.1819 2.41227 13.2501 2.31089 13.2967 2.19918C13.3432 2.08748 13.3672 1.96766 13.3672 1.84665C13.3672 1.72564 13.3432 1.60583 13.2967 1.49413C13.2501 1.38242 13.1819 1.28104 13.096 1.19582C12.9243 1.02509 12.6919 0.92926 12.4498 0.92926C12.2076 0.92926 11.9753 1.02509 11.8035 1.19582Z' fill='white'/%3E%3C/svg%3E");
    }
    &:indeterminate {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 10h8'/%3E%3C/svg%3E");
    }
  }
}
@layer components {
  .dark .kt-checkbox {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
}
@layer components {
  .kt-datatable-toolbar {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: calc(var(--spacing) * 3);
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--muted-foreground);
    @media (width >= 40rem) {
      flex-direction: row;
    }
    @media (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .kt-datatable-pagination {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 1);
    .kt-datatable-pagination-button {
      display: inline-flex;
      height: calc(var(--spacing) * 7);
      min-width: calc(var(--spacing) * 7);
      cursor: pointer;
      align-items: center;
      justify-content: center;
      border-radius: calc(var(--radius) - 2px);
      background-color: transparent;
      padding-inline: calc(var(--spacing) * 0.5);
      color: var(--muted-foreground);
      &.active,	&:hover:not(:disabled) {
        background-color: var(--accent);
        color: var(--accent-foreground);
      }
      &.kt-datatable-pagination-prev {
        color: var(--foreground);
      }
      &.kt-datatable-pagination-next {
        color: var(--foreground);
      }
      &:disabled {
        cursor: default;
        color: var(--muted-foreground);
      }
    }
  }
  .kt-datatable-length {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    white-space: nowrap;
  }
  .kt-datatable-info {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 4);
  }
  .kt-datatable-loading {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: calc(var(--radius) - 2px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--card);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--card-foreground);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
  }
  .kt-datatable-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
  }
  [data-kt-datatable] {
    position: relative;
  }
  [data-kt-datatable].loading table {
    opacity: 0.6;
  }
}
@layer components;
@layer components {
  .kt-drawer {
    position: fixed;
    inset: calc(var(--spacing) * 0);
    z-index: 10;
    flex-direction: column;
    background-color: var(--popover);
    color: var(--popover-foreground);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    --tw-outline-style: none;
    outline-style: none;
  }
  .kt-drawer-backdrop {
    position: fixed;
    inset: calc(var(--spacing) * 0);
    background-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
    backdrop-filter: blur(4px);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .kt-drawer-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    padding: calc(var(--spacing) * 5);
  }
  .kt-drawer-title {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--mono);
  }
  .kt-drawer-close {
    margin-inline-end: calc(var(--spacing) * -2.5);
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
    flex-shrink: 0;
    cursor: pointer;
    i {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      opacity: 70%;
    }
    > svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      opacity: 70%;
    }
    &:focus,	&:hover {
      i {
        opacity: 100%;
      }
      > svg {
        opacity: 100%;
      }
    }
  }
  .kt-drawer-content {
    flex-grow: 1;
    overflow-y: auto;
    padding: calc(var(--spacing) * 5);
  }
  .kt-drawer-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--border);
    padding: calc(var(--spacing) * 5);
  }
  .kt-drawer-start {
    inset-inline-end: auto;
    max-width: 90%;
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    &[data-kt-drawer-initialized].open {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    [data-kt-drawer-initialized].open & {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .kt-drawer-end {
    inset-inline-start: auto;
    max-width: 90%;
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    &[data-kt-drawer-initialized].open {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    [data-kt-drawer-initialized].open & {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .kt-drawer-top {
    inset-inline-start: calc(var(--spacing) * 0);
    inset-inline-end: calc(var(--spacing) * 0);
    top: auto;
    bottom: calc(var(--spacing) * 0);
    max-height: 90%;
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    &[data-kt-drawer-initialized].open {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    [data-kt-drawer-initialized].open & {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .kt-drawer-bottom {
    inset-inline-start: calc(var(--spacing) * 0);
    inset-inline-end: calc(var(--spacing) * 0);
    top: calc(var(--spacing) * 0);
    bottom: auto;
    max-height: 90%;
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    &[data-kt-drawer-initialized].open {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    [data-kt-drawer-initialized].open & {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .kt-drawer.open .kt-drawer-start {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .kt-drawer.open .kt-drawer-end {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .kt-drawer.open .kt-drawer-top {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .kt-drawer.open .kt-drawer-bottom {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
@layer components {
  .kt-dropdown {
    border-radius: calc(var(--radius) - 2px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--popover);
    color: var(--popover-foreground);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    &:not(.open) {
      display: none;
    }
  }
  .kt-dropdown-header {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .kt-dropdown-body {
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
  }
}
@layer components {
  .kt-dropdown-menu {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
    border-radius: calc(var(--radius) - 2px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--popover);
    padding: calc(var(--spacing) * 2);
    color: var(--popover-foreground);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    &:not(.open) {
      display: none;
    }
  }
  .kt-dropdown-menu-sub {
    width: 100%;
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .kt-dropdown-menu-toggle {
    display: flex;
    width: 100%;
    cursor: pointer;
    align-items: center;
    column-gap: calc(var(--spacing) * 2.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
    text-align: start;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    color: var(--foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle]& {
      background-color: var(--accent);
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle] & {
      background-color: var(--accent);
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle]& {
      color: var(--accent-foreground);
    }
    [data-kt-dropdown-initialized].open > [data-kt-dropdown-toggle] & {
      color: var(--accent-foreground);
    }
    .kt-dropdown-menu-indicator {
      margin-inline-start: auto;
      display: inline-flex;
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
      flex-shrink: 0;
      align-items: center;
      color: var(--muted-foreground);
    }
    i {
      flex-shrink: 0;
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      color: var(--muted-foreground);
    }
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      flex-shrink: 0;
      color: var(--muted-foreground);
    }
  }
  .kt-dropdown-menu-link {
    display: flex;
    width: 100%;
    cursor: pointer;
    align-items: center;
    column-gap: calc(var(--spacing) * 2.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
    text-align: start;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    color: var(--foreground);
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
    [data-kt-dropdown-initialized] .selected {
      background-color: var(--accent);
    }
    [data-kt-dropdown-initialized] .selected & {
      background-color: var(--accent);
    }
    [data-kt-dropdown-initialized] &.selected {
      background-color: var(--accent);
    }
    [data-kt-dropdown-initialized] .selected {
      color: var(--accent-foreground);
    }
    [data-kt-dropdown-initialized] .selected & {
      color: var(--accent-foreground);
    }
    [data-kt-dropdown-initialized] &.selected {
      color: var(--accent-foreground);
    }
    i {
      flex-shrink: 0;
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      color: var(--muted-foreground);
    }
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      flex-shrink: 0;
      color: var(--muted-foreground);
    }
  }
  .kt-dropdown-menu-separator {
    margin-inline: calc(var(--spacing) * -2);
    margin-block: calc(var(--spacing) * 2.5);
    height: 1px;
    background-color: var(--border);
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
}
@layer components {
  .kt-image-input {
    position: relative;
    display: inline-flex;
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    input[type='file'] {
      position: absolute;
      width: calc(var(--spacing) * 0);
      height: calc(var(--spacing) * 0);
      appearance: none;
      opacity: 0%;
    }
  }
  .kt-image-input-remove {
    position: absolute;
    inset-inline-end: calc(var(--spacing) * 0.25);
    top: calc(var(--spacing) * 0.25);
    z-index: 1;
    display: flex;
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--background);
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    i {
      font-size: 11px;
      color: var(--muted-foreground);
    }
    svg {
      width: calc(var(--spacing) * 3.25);
      height: calc(var(--spacing) * 3.25);
      color: var(--muted-foreground);
    }
    &:hover {
      i {
        color: var(--foreground);
      }
      svg {
        color: var(--foreground);
      }
    }
  }
  .kt-image-input-placeholder {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-size: cover;
    background-repeat: no-repeat;
    [data-kt-image-input-initialized].empty & {
      border-color: var(--border);
    }
  }
  .kt-image-input-preview {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    border-radius: calc(infinity * 1px);
    background-size: cover;
    background-repeat: no-repeat;
  }
}
@layer components {
  .kt-input {
    display: block;
    width: 100%;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: var(--background);
    color: var(--foreground);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    outline-style: var(--tw-outline-style);
    outline-width: 0px;
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &::placeholder {
      color: var(--muted-foreground);
    }
    &:focus-visible {
      border-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 30%, transparent);
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &::file-selector-button {
      height: 100%;
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 50%;
    }
    &[readonly] {
      opacity: 70%;
    }
    &[type=file] {
      padding-block: calc(var(--spacing) * 0);
    }
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
    &::file-selector-button {
      border-inline-end-style: var(--tw-border-style);
      border-inline-end-width: 1px;
    }
    &::file-selector-button {
      --tw-border-style: solid;
      border-style: solid;
    }
    &::file-selector-button {
      border-color: var(--input);
    }
    &::file-selector-button {
      background-color: transparent;
    }
    &::file-selector-button {
      padding: calc(var(--spacing) * 0);
    }
    &::file-selector-button {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
    &::file-selector-button {
      color: var(--foreground);
    }
    &::file-selector-button {
      font-style: normal;
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
  }
  .kt-input {
    height: calc(var(--spacing) * 8.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 3);
    font-size: 0.8125rem;
    --tw-leading: var(--text-sm--line-height);
    line-height: var(--text-sm--line-height);
    &::file-selector-button {
      margin-inline-end: calc(var(--spacing) * 3);
    }
    &::file-selector-button {
      padding-inline-end: calc(var(--spacing) * 3);
    }
  }
  .kt-input-lg {
    height: calc(var(--spacing) * 10);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 4);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    &::file-selector-button {
      margin-inline-end: calc(var(--spacing) * 4);
    }
    &::file-selector-button {
      padding-inline-end: calc(var(--spacing) * 4);
    }
  }
  .kt-input-sm {
    height: calc(var(--spacing) * 7);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    &::file-selector-button {
      margin-inline-end: calc(var(--spacing) * 2.5);
    }
    &::file-selector-button {
      padding-inline-end: calc(var(--spacing) * 2.5);
    }
  }
}
@layer components {
  .kt-input:not(input) {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 1.5);
    &:has(input:focus-visible) {
      border-color: var(--ring);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 30%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
    input {
      display: flex;
      height: auto;
      width: 100%;
      border-style: var(--tw-border-style);
      border-width: 0px;
      background-color: transparent;
      padding: calc(var(--spacing) * 0);
      color: var(--foreground);
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      transition-property: color;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      --tw-outline-style: none;
      outline-style: none;
      &::placeholder {
        color: var(--muted-foreground);
      }
      &:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
      &:disabled {
        cursor: not-allowed;
      }
      &:disabled {
        opacity: 50%;
      }
      font-size: inherit;
      list-style: inherit;
    }
    i {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
      color: var(--muted-foreground);
    }
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      color: var(--muted-foreground);
    }
    &.kt-input-sm {
      gap: calc(var(--spacing) * 1.25);
      i {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
      }
      svg {
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
        color: var(--muted-foreground);
      }
    }
    &.kt-input-lg {
      gap: calc(var(--spacing) * 1.5);
      i {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
      svg {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
        color: var(--muted-foreground);
      }
    }
  }
}
@layer components {
  .kt-input-addon {
    display: flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: var(--muted);
    color: var(--secondary-foreground);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    height: calc(var(--spacing) * 8.5);
    min-width: calc(var(--spacing) * 8.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 3);
    font-size: 0.8125rem;
    --tw-leading: var(--text-sm--line-height);
    line-height: var(--text-sm--line-height);
    i {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    svg {
      width: calc(var(--spacing) * 4.5);
      height: calc(var(--spacing) * 4.5);
    }
    &.kt-input-addon-sm {
      height: calc(var(--spacing) * 7);
      min-width: calc(var(--spacing) * 7);
      border-radius: calc(var(--radius) - 2px);
      padding-inline: calc(var(--spacing) * 2.5);
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      i {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
      }
      svg {
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
      }
    }
    &.kt-input-addon-lg {
      height: calc(var(--spacing) * 10);
      min-width: calc(var(--spacing) * 10);
      border-radius: calc(var(--radius) - 2px);
      padding-inline: calc(var(--spacing) * 4);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      i {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
      svg {
        width: calc(var(--spacing) * 4.5);
        height: calc(var(--spacing) * 4.5);
      }
    }
    &.kt-input-addon-icon {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
}
@layer components {
  .kt-input-ghost {
    border-style: var(--tw-border-style);
    border-width: 0px;
    background-color: var(--background);
    padding: calc(var(--spacing) * 0);
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:focus-visible {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
@layer components {
  .dark .kt-input {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
}
@layer components {
  .kt-input-group {
    position: relative;
    display: flex;
    align-items: stretch;
    .kt-input {
      z-index: 1;
      flex-grow: 1;
    }
    .kt-input-addon:has(+ .kt-input) {
      border-start-end-radius: 0 !important;
      border-end-end-radius: 0 !important;
      border-inline-end-style: var(--tw-border-style) !important;
      border-inline-end-width: 0px !important;
    }
    .kt-input + .kt-input-addon {
      border-start-start-radius: 0 !important;
      border-end-start-radius: 0 !important;
      border-inline-start-style: var(--tw-border-style) !important;
      border-inline-start-width: 0px !important;
    }
    .kt-input-addon:has(+ .kt-btn) {
      border-start-end-radius: 0 !important;
      border-end-end-radius: 0 !important;
    }
    .kt-input + .kt-btn {
      border-start-start-radius: 0 !important;
      border-end-start-radius: 0 !important;
    }
    .kt-input + .kt-btn.kt-btn-outline {
      border-inline-start-style: var(--tw-border-style) !important;
      border-inline-start-width: 0px !important;
    }
    .kt-btn + .kt-input,	.kt-input-addon + .kt-input {
      border-start-start-radius: 0 !important;
      border-end-start-radius: 0 !important;
    }
    .kt-input:has(+ .kt-btn),	.kt-input:has(+ .kt-input-addon) {
      border-start-end-radius: 0 !important;
      border-end-end-radius: 0 !important;
    }
  }
}
@layer components {
  .kt-modal {
    position: fixed;
    inset: calc(var(--spacing) * 0);
    overflow: auto;
    padding: calc(var(--spacing) * 4);
    &:not(.open) {
      display: none;
    }
  }
  .kt-modal-backdrop {
    position: fixed;
    inset: calc(var(--spacing) * 0);
    background-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
    backdrop-filter: blur(4px);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .kt-modal-close {
    margin-inline-end: calc(var(--spacing) * -2.5);
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
    flex-shrink: 0;
    cursor: pointer;
    i {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
      opacity: 70%;
    }
    > svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      opacity: 70%;
    }
    &:focus,	&:hover {
      i {
        opacity: 100%;
      }
      > svg {
        opacity: 100%;
      }
    }
  }
  .kt-modal-dialog {
    position: fixed;
    inset-inline-start: calc(1/2 * 100%);
    top: calc(1/2 * 100%);
    display: none;
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    overflow: auto;
    padding: calc(var(--spacing) * 4);
  }
  .kt-modal-content {
    position: relative;
    margin-inline: auto;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--popover);
    color: var(--popover-foreground);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .kt-modal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: calc(var(--spacing) * 2);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 4);
  }
  .kt-modal-title {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--mono);
  }
  .kt-modal-body {
    overflow-y: auto;
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 4);
  }
  .kt-modal-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: calc(var(--spacing) * 2);
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 4);
  }
  .kt-modal-center:not(.kt-modal-fit) {
    .kt-modal-content {
      top: calc(1/2 * 100%);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .kt-modal-fit {
    overflow: visible;
    padding: calc(var(--spacing) * 0);
    &.kt-modal-center {
      inset-inline-start: calc(1/2 * 100%);
      top: calc(1/2 * 100%);
      --tw-translate-x: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
@layer components {
  .kt-radio {
    cursor: pointer;
    appearance: none;
    background-position: center;
    background-repeat: no-repeat;
    flex-shrink: 0;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: var(--background);
    --tw-ring-offset-color: var(--background);
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 50%;
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
    &:is(.dark *) {
      &[aria-invalid="true"] {
        border-color: var(--destructive);
      }
    }
    &:is(.dark *) {
      &[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
      }
    }
  }
  .kt-radio {
    &:checked {
      border-color: var(--primary);
    }
    &:checked {
      background-color: var(--primary);
    }
    &:checked {
      color: var(--primary-foreground);
    }
    &:indeterminate {
      border-color: var(--primary);
    }
    &:indeterminate {
      background-color: var(--primary);
    }
    &:indeterminate {
      color: var(--primary-foreground);
    }
  }
  .kt-radio {
    &:checked,	&[aria-checked='true'] {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 22 22' fill='none'%3E%3Ccircle cx='10.9995' cy='11' r='5.86667' fill='white'/%3E%3C/svg%3E");
    }
  }
  .kt-radio {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .kt-radio-sm {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
  }
  .kt-radio-lg {
    width: calc(var(--spacing) * 5.5);
    height: calc(var(--spacing) * 5.5);
  }
  .kt-radio-mono {
    &:checked {
      border-color: var(--mono);
    }
    &:checked {
      background-color: var(--mono);
    }
    &:checked {
      color: var(--mono-foreground);
    }
    &:indeterminate {
      border-color: var(--mono);
    }
    &:indeterminate {
      background-color: var(--mono);
    }
    &:indeterminate {
      color: var(--mono-foreground);
    }
  }
}
@layer components {
  .dark .kt-radio {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
}
@layer components {
  :root {
    --kt-scrollable-scrollbar-size: 5px;
    --kt-scrollable-thumb-color: var(--color-accent);
  }
  .kt-scrollable::-webkit-scrollbar {
    width: var(--kt-scrollable-scrollbar-size);
  }
  .kt-scrollable::-webkit-scrollbar-track {
    background: transparent;
  }
  .kt-scrollable::-webkit-scrollbar-thumb {
    background: var(--kt-scrollable-thumb-color);
    border-radius: var(--kt-scrollable-scrollbar-size);
  }
  .kt-scrollable {
    scrollbar-width: thin;
    scrollbar-color: var(--kt-scrollable-thumb-color) transparent;
  }
}
@layer components {
  .kt-select {
    display: flex;
    width: 100%;
    appearance: none;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: var(--background);
    padding-block: calc(var(--spacing) * 0);
    color: var(--foreground);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &::placeholder {
      color: var(--muted-foreground);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--muted-foreground) 80%, transparent);
      }
    }
    &:focus-visible {
      border-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 30%, transparent);
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &::file-selector-button {
      height: 100%;
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 50%;
    }
    &[readonly] {
      opacity: 70%;
    }
    &[type=file] {
      padding-block: calc(var(--spacing) * 0);
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
    background-repeat: no-repeat;
    background-position: right 0.65rem center;
    background-size: 14px 11px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%239f9fa9' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3E%3C/svg%3E");
    .dark & {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%239f9fa9' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3E%3C/svg%3E");
    }
    &[multiple],	&[size]:not([size='1']) {
      padding-inline-end: var(--btn-default-px);
      background-image: none;
    }
    &:-moz-focusring {
      color: transparent;
      text-shadow: none;
    }
    [dir='rtl'] & {
      background-position: left 0.5rem center;
    }
    &.active {
      border-color: var(--ring);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 30%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
    }
    &.disabled {
      cursor: not-allowed;
      opacity: 50%;
    }
  }
  .kt-select-arrow {
    margin-inline-start: auto;
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      color: var(--muted-foreground);
    }
  }
  .kt-select-dropdown {
    border-radius: calc(var(--radius) - 2px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--popover);
    color: var(--popover-foreground);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
  }
  .kt-select-option {
    display: flex;
    width: 100%;
    cursor: pointer;
    align-items: center;
    column-gap: calc(var(--spacing) * 2.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
    text-align: start;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
    &.disabled {
      pointer-events: none;
      opacity: 50%;
    }
    &.selected {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
    &.highlighted {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
  }
  .kt-select-group {
    padding-block: calc(var(--spacing) * 1);
  }
  .kt-select-group-header {
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--muted-foreground);
    text-transform: uppercase;
  }
}
@layer components {
  .kt-select {
    height: calc(var(--spacing) * 8.5);
    gap: calc(var(--spacing) * 1);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 3);
    font-size: 0.8125rem;
    --tw-leading: var(--text-sm--line-height);
    line-height: var(--text-sm--line-height);
  }
  .kt-select-lg {
    height: calc(var(--spacing) * 10);
    gap: calc(var(--spacing) * 1.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 4);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .kt-select-sm {
    height: calc(var(--spacing) * 7);
    gap: calc(var(--spacing) * 1);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 2.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
}
@layer components {
  .dark .kt-input {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
}
@layer components {
  .kt-switch {
    position: relative;
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    background-color: var(--input);
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
    &:focus-visible {
      --tw-ring-offset-color: var(--background);
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 50%;
    }
    &[aria-invalid="true"] {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
    &:before {
      pointer-events: none;
      position: absolute;
      inset-inline-start: calc(var(--spacing) * 0);
      top: calc(1/2 * 100%);
      display: block;
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      border-radius: calc(infinity * 1px);
      background-color: var(--color-white);
      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
      --tw-content: "";
      content: var(--tw-content);
    }
    &:checked,	&[aria-checked='true'] {
      background-color: var(--primary);
    }
  }
  .kt-switch {
    height: calc(var(--spacing) * 5);
    width: calc(var(--spacing) * 7.5);
    border-radius: calc(infinity * 1px);
    &:before {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
    &:checked,	&[aria-checked='true'] {
      &:before {
        --tw-translate-x: calc(var(--spacing) * 3.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .kt-switch-sm {
    height: calc(var(--spacing) * 4.5);
    width: calc(var(--spacing) * 6.5);
    border-radius: calc(infinity * 1px);
    &:before {
      width: calc(var(--spacing) * 2.5);
      height: calc(var(--spacing) * 2.5);
    }
    &:checked,	&[aria-checked='true'] {
      &:before {
        --tw-translate-x: calc(var(--spacing) * 3);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .kt-switch-lg {
    height: calc(var(--spacing) * 5.5);
    width: calc(var(--spacing) * 8.5);
    border-radius: calc(infinity * 1px);
    &:before {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
    &:checked,	&[aria-checked='true'] {
      &:before {
        --tw-translate-x: calc(var(--spacing) * 4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
}
@layer components {
  [dir='rtl'] .kt-switch {
    &:before {
      --tw-translate-x: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    &:checked,	&[aria-checked='true'] {
      &:before {
        --tw-translate-x: calc(var(--spacing) * -3.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
    &.kt-switch-sm {
      &:checked,	&[aria-checked='true'] {
        &:before {
          --tw-translate-x: calc(var(--spacing) * -3);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
    &.kt-switch-lg {
      &:checked,	&[aria-checked='true'] {
        &:before {
          --tw-translate-x: calc(var(--spacing) * -4);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
}
@layer components {
  .dark .kt-switch {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
}
@layer components {
  .kt-tabs.kt-tabs-line {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 7);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
  }
  .kt-tabs.kt-tabs-line .kt-tab-toggle {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
    border-bottom-color: transparent;
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--secondary-foreground);
    &:hover {
      @media (hover: hover) {
        color: var(--primary);
      }
    }
    &[data-kt-tab-toggle].active {
      border-color: var(--primary);
    }
    [data-kt-tab-toggle].active & {
      border-color: var(--primary);
    }
    [data-kt-tabs-initialized]	[data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active)	& {
      border-color: var(--primary);
    }
    &[data-kt-tab-toggle].active {
      color: var(--primary);
    }
    [data-kt-tab-toggle].active & {
      color: var(--primary);
    }
    [data-kt-tabs-initialized]	[data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active)	& {
      color: var(--primary);
    }
    svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
      flex-shrink: 0;
      color: var(--muted-foreground);
      &[data-kt-tab-toggle].active {
        color: var(--primary);
      }
      [data-kt-tab-toggle].active & {
        color: var(--primary);
      }
      [data-kt-tabs-initialized]	[data-kt-dropdown-initialized]:has([data-kt-tab-toggle].active)	& {
        color: var(--primary);
      }
    }
    &:hover {
      svg {
        color: var(--primary);
      }
    }
  }
}
@layer components {
  .kt-textarea {
    width: 100%;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: var(--background);
    color: var(--foreground);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &::placeholder {
      color: var(--muted-foreground);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--muted-foreground) 80%, transparent);
      }
    }
    &:focus-visible {
      border-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 30%, transparent);
      }
    }
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 50%;
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    &[readonly] {
      opacity: 70%;
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
    }
  }
  .kt-textarea {
    border-radius: calc(var(--radius) - 2px);
    padding: calc(var(--spacing) * 3);
    font-size: 0.8125rem;
    --tw-leading: var(--text-sm--line-height);
    line-height: var(--text-sm--line-height);
  }
  .kt-textarea-lg {
    border-radius: calc(var(--radius) - 2px);
    padding: calc(var(--spacing) * 4);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .kt-textarea-sm {
    border-radius: calc(var(--radius) - 2px);
    padding: calc(var(--spacing) * 2.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
}
@layer components {
  .dark .kt-textarea {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
}
@layer components {
  .kt-tooltip {
    border-radius: calc(var(--radius) - 2px);
    background-color: var(--mono);
    padding: calc(var(--spacing) * 1.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--mono-foreground);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    &:is(.dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
    &:is(.dark *) {
      border-color: var(--border);
    }
    &:not(.show) {
      display: none;
    }
  }
  .kt-tooltip-light {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--popover);
    color: var(--popover-foreground);
  }
}
@layer components {
  .kt-popover {
    border-radius: calc(var(--radius) - 2px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--popover);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--popover-foreground);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: rgba(0,0,0,0.05);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, rgba(0,0,0,0.05) var(--tw-shadow-alpha), transparent);
    }
    &:not(.show) {
      display: none;
    }
  }
  .kt-popover-header {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--mono);
  }
  .kt-popover-content {
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 2);
  }
}
@layer components {
  .kt-table-wrapper {
    position: relative;
    width: 100%;
    overflow: auto;
  }
  .kt-table {
    width: 100%;
    border-collapse: collapse;
    text-align: left;
    vertical-align: bottom;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--foreground);
    caption-side: bottom;
    tr {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
      border-color: var(--border);
    }
    caption {
      margin-top: calc(var(--spacing) * 4);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      color: var(--muted-foreground);
    }
    thead {
      & tr {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
      }
      th {
        height: calc(var(--spacing) * 10);
        background-color: var(--muted);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--muted) 40%, transparent);
        }
        padding-inline: calc(var(--spacing) * 4);
        text-align: left;
        vertical-align: middle;
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--secondary-foreground);
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
          text-align: right;
        }
        &:has([role=checkbox]) {
          padding-inline-end: calc(var(--spacing) * 0);
        }
      }
    }
    tbody {
      & tr:last-child {
        border-style: var(--tw-border-style);
        border-width: 0px;
      }
      td {
        padding-inline: calc(var(--spacing) * 4);
        padding-block: calc(var(--spacing) * 3);
        vertical-align: middle;
        &:has([role=checkbox]) {
          padding-inline-end: calc(var(--spacing) * 0);
        }
      }
    }
    tfoot {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
      background-color: var(--muted);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
      &:last-child {
        &>tr {
          border-bottom-style: var(--tw-border-style);
          border-bottom-width: 0px;
        }
      }
      th {
        height: calc(var(--spacing) * 10);
        padding-inline: calc(var(--spacing) * 4);
        text-align: left;
        vertical-align: middle;
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
        color: var(--secondary-foreground);
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
          text-align: right;
        }
        &:has([role=checkbox]) {
          padding-inline-end: calc(var(--spacing) * 0);
        }
      }
    }
    td,	th {
      input[type=checkbox] {
        vertical-align: inherit;
      }
    }
  }
  [data-kt-datatable-table],	.kt-table-highlight {
    tr {
      &.checked {
        background-color: var(--muted);
      }
      &:has(td):hover {
        background-color: var(--muted);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--muted) 50%, transparent);
        }
      }
    }
  }
  .kt-table-col {
    display: inline-flex;
    align-items: center;
    gap: 0.35rem;
    cursor: pointer;
  }
  .kt-table-col-label {
    display: inline-flex;
    align-items: center;
    flex-wrap: nowrap;
    white-space: nowrap;
    gap: 0.35rem;
  }
  .kt-table-col-sort {
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 0.975rem;
    width: 0.975rem;
    gap: 0.125rem;
    line-height: 1;
    &:before {
      display: inline-block;
      content: '';
      height: 0.25rem;
      width: 0.438rem;
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M1.08333 4.83333C0.908333 4.83333 0.791667 4.775 0.675 4.65833C0.441667 4.425 0.441667 4.075 0.675 3.84167L3.59167 0.925C3.825 0.691667 4.175 0.691667 4.40833 0.925L7.325 3.84167C7.55833 4.075 7.55833 4.425 7.325 4.65833C7.09167 4.89167 6.74167 4.89167 6.50833 4.65833L4 2.15L1.49167 4.65833C1.375 4.775 1.25833 4.83333 1.08333 4.83333Z' fill='%2378829D'/%3E%3C/svg%3E");
    }
    &:after {
      display: inline-block;
      content: '';
      height: 0.25rem;
      width: 0.438rem;
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M4 4.24984C3.825 4.24984 3.70833 4.1915 3.59167 4.07484L0.675 1.15817C0.441667 0.924838 0.441667 0.574837 0.675 0.341504C0.908333 0.108171 1.25833 0.108171 1.49167 0.341504L4 2.84984L6.50833 0.341504C6.74167 0.108171 7.09167 0.108171 7.325 0.341504C7.55833 0.574837 7.55833 0.924838 7.325 1.15817L4.40833 4.07484C4.29167 4.1915 4.175 4.24984 4 4.24984Z' fill='%2378829D'/%3E%3C/svg%3E");
    }
    [aria-sort='asc'] & {
      &:before {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M1.08333 4.83333C0.908333 4.83333 0.791667 4.775 0.675 4.65833C0.441667 4.425 0.441667 4.075 0.675 3.84167L3.59167 0.925C3.825 0.691667 4.175 0.691667 4.40833 0.925L7.325 3.84167C7.55833 4.075 7.55833 4.425 7.325 4.65833C7.09167 4.89167 6.74167 4.89167 6.50833 4.65833L4 2.15L1.49167 4.65833C1.375 4.775 1.25833 4.83333 1.08333 4.83333Z' fill='%234B5675'/%3E%3C/svg%3E");
      }
      &:after {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M4 4.24984C3.825 4.24984 3.70833 4.1915 3.59167 4.07484L0.675 1.15817C0.441667 0.924838 0.441667 0.574837 0.675 0.341504C0.908333 0.108171 1.25833 0.108171 1.49167 0.341504L4 2.84984L6.50833 0.341504C6.74167 0.108171 7.09167 0.108171 7.325 0.341504C7.55833 0.574837 7.55833 0.924838 7.325 1.15817L4.40833 4.07484C4.29167 4.1915 4.175 4.24984 4 4.24984Z' fill='%23C9CEDA'/%3E%3C/svg%3E");
      }
    }
    [aria-sort='desc'] & {
      &:before {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M1.08333 4.83333C0.908333 4.83333 0.791667 4.775 0.675 4.65833C0.441667 4.425 0.441667 4.075 0.675 3.84167L3.59167 0.925C3.825 0.691667 4.175 0.691667 4.40833 0.925L7.325 3.84167C7.55833 4.075 7.55833 4.425 7.325 4.65833C7.09167 4.89167 6.74167 4.89167 6.50833 4.65833L4 2.15L1.49167 4.65833C1.375 4.775 1.25833 4.83333 1.08333 4.83333Z' fill='%23C9CEDA'/%3E%3C/svg%3E");
      }
      &:after {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='5' viewBox='0 0 8 5' fill='none'%3E%3Cpath d='M4 4.24984C3.825 4.24984 3.70833 4.1915 3.59167 4.07484L0.675 1.15817C0.441667 0.924838 0.441667 0.574837 0.675 0.341504C0.908333 0.108171 1.25833 0.108171 1.49167 0.341504L4 2.84984L6.50833 0.341504C6.74167 0.108171 7.09167 0.108171 7.325 0.341504C7.55833 0.574837 7.55833 0.924838 7.325 1.15817L4.40833 4.07484C4.29167 4.1915 4.175 4.24984 4 4.24984Z' fill='%234B5675'/%3E%3C/svg%3E");
      }
    }
  }
}
@layer components {
  .kt-table-border {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    & td,	& th {
      border-inline-end-style: var(--tw-border-style);
      border-inline-end-width: 1px;
      border-color: var(--border);
      &:last-child {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 0px;
      }
    }
  }
  .kt-table-border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
    border-color: var(--border);
  }
  .kt-table-border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
    border-color: var(--border);
  }
  .kt-table-border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
    border-color: var(--border);
  }
  .kt-table-border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--border);
  }
}
@layer components {
  [dir='rtl'] .kt-table {
    text-align: right;
  }
}
@layer components {
  .kt-toggle-group {
    display: inline-flex;
    align-items: center;
    background-color: var(--background);
    --tw-leading: 1;
    line-height: 1;
  }
  .kt-toggle-group {
    .kt-btn {
      flex-grow: 1;
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-inline-end-style: var(--tw-border-style);
      border-inline-end-width: 0px;
      border-color: var(--border);
      background-color: transparent;
      color: var(--accent-foreground);
      &:last-child {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px;
        border-color: var(--border);
      }
      &:not(:first-child) {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
      }
      &:not(:last-child) {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
      }
      &:not(:first-child):not(:last-child) {
        border-radius: 0;
      }
      svg,	i {
        color: var(--muted-foreground);
      }
      input[type='checkbox'],	input[type='radio'] {
        display: none;
      }
      &:hover,	&:focus,	&:active,	&:has(input:checked),	&.active {
        background-color: var(--accent);
        color: var(--accent-foreground);
        svg,	i {
          color: var(--accent-foreground);
        }
      }
    }
  }
}
@layer components {
  .kt-separator {
    height: 1px;
    width: 100%;
    flex-shrink: 0;
    background-color: var(--border);
  }
  .kt-separator-vertical {
    height: 100%;
    width: 1px;
  }
}
@layer components {
  .kt-progress {
    position: relative;
    height: calc(var(--spacing) * 1);
    width: 100%;
    overflow: hidden;
    border-radius: calc(infinity * 1px);
    background-color: var(--secondary);
  }
  .kt-progress-indicator {
    height: 100%;
    width: 100%;
    flex: 1;
    transform: translateX(calc(100 - var(--progress-value)));
    border-radius: calc(infinity * 1px);
    background-color: var(--primary);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .kt-progress-primary {
    .kt-progress-indicator {
      background-color: var(--primary);
    }
  }
  .kt-progress-success {
    .kt-progress-indicator {
      background-color: var(--color-green-500);
    }
  }
  .kt-progress-warning {
    .kt-progress-indicator {
      background-color: var(--color-yellow-500);
    }
  }
  .kt-progress-info {
    .kt-progress-indicator {
      background-color: var(--color-violet-500);
    }
  }
  .kt-progress-destructive {
    .kt-progress-indicator {
      background-color: var(--destructive);
    }
  }
  .kt-progress-mono {
    .kt-progress-indicator {
      background-color: var(--mono);
    }
  }
}
@layer components {
  .kt-pagination {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 1);
  }
  .kt-pagination-item {
    display: flex;
    flex-shrink: 0;
    flex-direction: row;
    align-items: center;
    gap: calc(var(--spacing) * 1);
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      color: var(--muted-foreground);
    }
  }
  .kt-pagination-ellipsis {
    display: flex;
    height: calc(var(--spacing) * 9);
    width: calc(var(--spacing) * 9);
    align-items: center;
    justify-content: center;
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
      color: var(--muted-foreground);
    }
  }
}
@layer components {
  .kt-skeleton {
    animation: var(--animate-pulse);
    border-radius: calc(var(--radius) - 2px);
    background-color: var(--accent);
  }
}
@layer components {
  .kt-kbd {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: calc(var(--radius) - 2px);
    font-family: var(--font-mono);
  }
  .kt-kbd {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--border);
    background-color: var(--accent);
    color: var(--accent-foreground);
  }
  .kt-kbd-outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--input);
    background-color: transparent;
    color: var(--accent-foreground);
  }
  .kt-kbd {
    height: calc(var(--spacing) * 7);
    min-width: calc(var(--spacing) * 7);
    padding-inline: calc(var(--spacing) * 1.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    & svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .kt-kbd-xs {
    height: calc(var(--spacing) * 5);
    min-width: calc(var(--spacing) * 5);
    padding-inline: calc(var(--spacing) * 1);
    font-size: 0.6875rem;
    --tw-leading: 0.75rem;
    line-height: 0.75rem;
    & svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
  .kt-kbd-sm {
    height: calc(var(--spacing) * 6);
    min-width: calc(var(--spacing) * 6);
    padding-inline: calc(var(--spacing) * 1);
    font-size: 0.75rem;
    --tw-leading: 0.75rem;
    line-height: 0.75rem;
    & svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
}
@layer components {
  .kt-breadcrumb {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    overflow-wrap: break-word;
    color: var(--muted-foreground);
  }
  .kt-breadcrumb-item {
    display: inline-flex;
    align-items: center;
    gap: calc(var(--spacing) * 1.5);
  }
  .kt-breadcrumb-link {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:hover {
      @media (hover: hover) {
        color: var(--foreground);
      }
    }
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .kt-breadcrumb-page {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--foreground);
  }
  .kt-breadcrumb-separator {
    svg {
      width: calc(var(--spacing) * 3.5);
      height: calc(var(--spacing) * 3.5);
    }
  }
  .kt-breadcrumb-ellipsis {
    svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
}
:root {
  --background: oklch(1 0 0);
  --foreground: oklch(27.4% 0.006 286.033);
  --card: oklch(1 0 0);
  --card-foreground: oklch(27.4% 0.006 286.033);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(27.4% 0.006 286.033);
  --primary: oklch(62.3% 0.214 259.815);
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(96.7% 0.003 264.542);
  --secondary-foreground: oklch(44.6% 0.03 256.802);
  --muted: oklch(96.7% 0.003 264.542);
  --muted-foreground: oklch(70.5% 0.015 286.067);
  --accent: oklch(96.7% 0.003 264.542);
  --accent-foreground: oklch(21% 0.006 285.885);
  --destructive: oklch(57.7% 0.245 27.325);
  --destructive-foreground: oklch(1 0 0);
  --mono: oklch(14.1% 0.005 285.823);
  --mono-foreground: oklch(1 0 0);
  --border: oklch(
		94% 0.004 286.32
	);
  --input: oklch(92% 0.004 286.32);
  --ring: oklch(87.1% 0.006 286.286);
  --radius: 0.5rem;
}
.dark {
  --background: oklch(14.1% 0.005 285.823);
  --foreground: oklch(98.5% 0 0);
  --card: oklch(14.1% 0.005 285.823);
  --card-foreground: oklch(98.5% 0 0);
  --popover: oklch(14.1% 0.005 285.823);
  --popover-foreground: oklch(98.5% 0 0);
  --primary: oklch(54.6% 0.245 262.881);
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(27.4% 0.006 286.033);
  --secondary-foreground: oklch(70.5% 0.015 286.067);
  --muted: oklch(21% 0.006 285.885);
  --muted-foreground: oklch(55.2% 0.016 285.938);
  --accent: oklch(21% 0.006 285.885);
  --accent-foreground: oklch(98.5% 0 0);
  --destructive: oklch(57.7% 0.245 27.325);
  --destructive-foreground: oklch(1 0 0);
  --mono: oklch(87.1% 0.006 286.286);
  --mono-foreground: oklch(0 0 0);
  --border: oklch(27.4% 0.006 286.033);
  --input: oklch(27.4% 0.006 286.033);
  --ring: oklch(27.4% 0.006 286.033);
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
      --tw-tracking: initial;
    }
  }
}
